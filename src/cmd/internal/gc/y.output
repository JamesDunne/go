
state 0
	$accept: .file $end 
	$$4: .    (4)

	.  reduce 4 (src line 151)

	file  goto 1
	loadsys  goto 2
	$$4  goto 3

state 1
	$accept:  file.$end 

	$end  accept
	.  error


state 2
	file:  loadsys.package imports xdcl_list 
	package: .    (2)

	LPACKAGE  shift 5
	.  reduce 2 (src line 134)

	package  goto 4

state 3
	loadsys:  $$4.import_package import_there 

	LPACKAGE  shift 7
	.  error

	import_package  goto 6

state 4
	file:  loadsys package.imports xdcl_list 
	imports: .    (6)

	.  reduce 6 (src line 168)

	imports  goto 8

state 5
	package:  LPACKAGE.sym ';' 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 9
	hidden_importsym  goto 11

state 6
	loadsys:  $$4 import_package.import_there 
	$$21: .    (21)

	.  reduce 21 (src line 275)

	import_there  goto 14
	$$21  goto 15

state 7
	import_package:  LPACKAGE.LNAME import_safety ';' 

	LNAME  shift 16
	.  error


state 8
	file:  loadsys package imports.xdcl_list 
	imports:  imports.import ';' 
	xdcl_list: .    (220)

	LIMPORT  shift 19
	.  reduce 220 (src line 1518)

	xdcl_list  goto 17
	import  goto 18

state 9
	package:  LPACKAGE sym.';' 

	';'  shift 20
	.  error


state 10
	sym:  LNAME.    (159)

	.  reduce 159 (src line 1124)


state 11
	sym:  hidden_importsym.    (160)

	.  reduce 160 (src line 1133)


state 12
	sym:  '?'.    (161)

	.  reduce 161 (src line 1134)


state 13
	hidden_importsym:  '@'.LLITERAL '.' LNAME 
	hidden_importsym:  '@'.LLITERAL '.' '?' 

	LLITERAL  shift 21
	.  error


state 14
	loadsys:  $$4 import_package import_there.    (5)

	.  reduce 5 (src line 162)


state 15
	import_there:  $$21.hidden_import_list '$' '$' 
	hidden_import_list: .    (346)

	.  reduce 346 (src line 2220)

	hidden_import_list  goto 22

state 16
	import_package:  LPACKAGE LNAME.import_safety ';' 
	import_safety: .    (19)

	LNAME  shift 24
	.  reduce 19 (src line 267)

	import_safety  goto 23

state 17
	file:  loadsys package imports xdcl_list.    (1)
	xdcl_list:  xdcl_list.xdcl ';' 
	xdcl: .    (23)

	$end  reduce 1 (src line 125)
	error  shift 29
	LLITERAL  shift 69
	LBREAK  shift 41
	LCHAN  shift 79
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 33
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 83
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	';'  reduce 23 (src line 288)
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 57
	expr  goto 48
	ternaryexpr  goto 55
	fnliteral  goto 74
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 28
	labelname  goto 39
	name  goto 70
	new_name  goto 54
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 56
	xfndcl  goto 27
	xdcl  goto 25
	expr_list  goto 49
	common_dcl  goto 26
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 77

state 18
	imports:  imports import.';' 

	';'  shift 85
	.  error


state 19
	import:  LIMPORT.import_stmt 
	import:  LIMPORT.'(' import_stmt_list osemi ')' 
	import:  LIMPORT.'(' ')' 

	LLITERAL  shift 89
	LNAME  shift 10
	'('  shift 87
	'.'  shift 91
	'?'  shift 12
	'@'  shift 13
	.  error

	import_here  goto 88
	sym  goto 90
	hidden_importsym  goto 11
	import_stmt  goto 86

state 20
	package:  LPACKAGE sym ';'.    (3)

	.  reduce 3 (src line 141)


state 21
	hidden_importsym:  '@' LLITERAL.'.' LNAME 
	hidden_importsym:  '@' LLITERAL.'.' '?' 

	'.'  shift 92
	.  error


state 22
	import_there:  $$21 hidden_import_list.'$' '$' 
	hidden_import_list:  hidden_import_list.hidden_import 

	LCONST  shift 97
	LFUNC  shift 99
	LIMPORT  shift 95
	LTYPE  shift 98
	LVAR  shift 96
	'$'  shift 93
	.  error

	hidden_import  goto 94

state 23
	import_package:  LPACKAGE LNAME import_safety.';' 

	';'  shift 100
	.  error


state 24
	import_safety:  LNAME.    (20)

	.  reduce 20 (src line 268)


state 25
	xdcl_list:  xdcl_list xdcl.';' 

	';'  shift 101
	.  error


state 26
	xdcl:  common_dcl.    (24)

	.  reduce 24 (src line 293)


state 27
	xdcl:  xfndcl.    (25)

	.  reduce 25 (src line 294)


state 28
	xdcl:  non_dcl_stmt.    (26)

	.  reduce 26 (src line 298)


state 29
	xdcl:  error.    (27)

	.  reduce 27 (src line 303)


state 30
	common_dcl:  LVAR.vardcl 
	common_dcl:  LVAR.'(' vardcl_list osemi ')' 
	common_dcl:  LVAR.'(' ')' 

	LNAME  shift 10
	'('  shift 103
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 106
	dcl_name  goto 105
	dcl_name_list  goto 104
	vardcl  goto 102
	hidden_importsym  goto 11

state 31
	common_dcl:  lconst.constdcl 
	common_dcl:  lconst.'(' constdcl osemi ')' 
	common_dcl:  lconst.'(' constdcl ';' constdcl_list osemi ')' 
	common_dcl:  lconst.'(' ')' 

	LNAME  shift 10
	'('  shift 108
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 106
	dcl_name  goto 105
	dcl_name_list  goto 109
	constdcl  goto 107
	hidden_importsym  goto 11

state 32
	common_dcl:  LTYPE.typedcl 
	common_dcl:  LTYPE.'(' typedcl_list osemi ')' 
	common_dcl:  LTYPE.'(' ')' 

	LNAME  shift 10
	'('  shift 111
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 113
	typedclname  goto 112
	typedcl  goto 110
	hidden_importsym  goto 11

state 33
	xfndcl:  LFUNC.fndcl fnbody 
	fntype:  LFUNC.'(' oarg_type_list_ocomma ')' fnres 

	LNAME  shift 10
	'('  shift 115
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 116
	fndcl  goto 114
	hidden_importsym  goto 11

state 34
	non_dcl_stmt:  simple_stmt.    (258)

	.  reduce 258 (src line 1745)


state 35
	non_dcl_stmt:  for_stmt.    (259)

	.  reduce 259 (src line 1747)


state 36
	non_dcl_stmt:  switch_stmt.    (260)

	.  reduce 260 (src line 1748)


state 37
	non_dcl_stmt:  select_stmt.    (261)

	.  reduce 261 (src line 1749)


state 38
	non_dcl_stmt:  if_stmt.    (262)

	.  reduce 262 (src line 1750)


state 39
	non_dcl_stmt:  labelname.':' $$263 stmt 

	':'  shift 117
	.  error


state 40
	non_dcl_stmt:  LFALL.    (265)

	.  reduce 265 (src line 1767)


state 41
	non_dcl_stmt:  LBREAK.onew_name 
	onew_name: .    (157)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 157 (src line 1118)

	sym  goto 120
	new_name  goto 119
	onew_name  goto 118
	hidden_importsym  goto 11

state 42
	non_dcl_stmt:  LCONTINUE.onew_name 
	onew_name: .    (157)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 157 (src line 1118)

	sym  goto 120
	new_name  goto 119
	onew_name  goto 121
	hidden_importsym  goto 11

state 43
	non_dcl_stmt:  LGO.pseudocall 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	'('  shift 68
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 123
	pexpr_no_paren  goto 67
	pseudocall  goto 122
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 44
	non_dcl_stmt:  LDEFER.pseudocall 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	'('  shift 68
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 123
	pexpr_no_paren  goto 67
	pseudocall  goto 126
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 45
	non_dcl_stmt:  LGOTO.new_name 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 120
	new_name  goto 127
	hidden_importsym  goto 11

state 46
	non_dcl_stmt:  LRETURN.oexpr_list 
	oexpr_list: .    (294)

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 294 (src line 1916)

	sym  goto 124
	expr  goto 130
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	expr_list  goto 129
	oexpr_list  goto 128
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 47
	lconst:  LCONST.    (38)

	.  reduce 38 (src line 357)


state 48
	simple_stmt:  expr.    (49)
	simple_stmt:  expr.LASOP expr 
	simple_stmt:  expr.LINC 
	simple_stmt:  expr.LDEC 
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 
	expr_list:  expr.    (278)

	LASOP  shift 131
	LCOLAS  reduce 278 (src line 1851)
	LTHEN  shift 154
	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LDEC  shift 133
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LINC  shift 132
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	'='  reduce 278 (src line 1851)
	','  reduce 278 (src line 1851)
	.  reduce 49 (src line 413)


state 49
	simple_stmt:  expr_list.'=' expr_list 
	simple_stmt:  expr_list.LCOLAS expr_list 
	expr_list:  expr_list.',' expr 

	LCOLAS  shift 156
	'='  shift 155
	','  shift 157
	.  error


state 50
	for_stmt:  LFOR.$$74 for_body 
	$$74: .    (74)

	.  reduce 74 (src line 662)

	$$74  goto 158

state 51
	switch_stmt:  LSWITCH.$$88 if_header $$89 LBODY caseblock_list '}' 
	$$88: .    (88)

	.  reduce 88 (src line 757)

	$$88  goto 159

state 52
	select_stmt:  LSELECT.$$91 LBODY caseblock_list '}' 
	$$91: .    (91)

	.  reduce 91 (src line 780)

	$$91  goto 160

state 53
	if_stmt:  LIF.$$78 if_header $$79 loop_body $$80 elseif_list else 
	$$78: .    (78)

	.  reduce 78 (src line 691)

	$$78  goto 161

state 54
	labelname:  new_name.    (165)

	.  reduce 165 (src line 1178)


state 55
	expr:  ternaryexpr.    (93)

	.  reduce 93 (src line 796)


state 56
	expr:  uexpr.    (94)

	.  reduce 94 (src line 798)


state 57
	new_name:  sym.    (155)
	name:  sym.    (164)

	':'  reduce 155 (src line 1102)
	.  reduce 164 (src line 1169)


state 58
	uexpr:  pexpr.    (116)
	pseudocall:  pexpr.'(' ')' 
	pseudocall:  pexpr.'(' expr_or_type_list ocomma ')' 
	pseudocall:  pexpr.'(' expr_or_type_list LDDD ocomma ')' 
	pexpr_no_paren:  pexpr.'.' sym 
	pexpr_no_paren:  pexpr.'.' '(' expr_or_type ')' 
	pexpr_no_paren:  pexpr.'.' '(' LTYPE ')' 
	pexpr_no_paren:  pexpr.'[' expr ']' 
	pexpr_no_paren:  pexpr.'[' oexpr ':' oexpr ']' 
	pexpr_no_paren:  pexpr.'[' oexpr ':' oexpr ':' oexpr ']' 

	'('  shift 162
	'.'  shift 163
	'['  shift 164
	.  reduce 116 (src line 888)


state 59
	uexpr:  '*'.uexpr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 165
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 60
	uexpr:  '&'.uexpr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 166
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 61
	uexpr:  '+'.uexpr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 167
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 62
	uexpr:  '-'.uexpr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 168
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 63
	uexpr:  '!'.uexpr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 169
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 64
	uexpr:  '~'.uexpr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 170
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 65
	uexpr:  '^'.uexpr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 171
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 66
	uexpr:  LCOMM.uexpr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 172
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 67
	pexpr_no_paren:  pexpr_no_paren.'{' start_complit braced_keyval_list '}' 
	pexpr:  pexpr_no_paren.    (148)

	'{'  shift 173
	.  reduce 148 (src line 1065)


state 68
	pexpr_no_paren:  '('.expr_or_type ')' '{' start_complit braced_keyval_list '}' 
	pexpr:  '('.expr_or_type ')' 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 181
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 180
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 175
	ternaryexpr  goto 55
	expr_or_type  goto 174
	fnliteral  goto 74
	name  goto 70
	non_expr_type  goto 176
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	recvchantype  goto 177
	othertype  goto 179
	fntype  goto 178
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 69
	pexpr_no_paren:  LLITERAL.    (128)

	.  reduce 128 (src line 952)


state 70
	pexpr_no_paren:  name.    (129)

	.  reduce 129 (src line 957)


state 71
	pexpr_no_paren:  pseudocall.    (136)

	.  reduce 136 (src line 995)


state 72
	pexpr_no_paren:  convtype.'(' expr ocomma ')' 

	'('  shift 182
	.  error


state 73
	pexpr_no_paren:  comptype.lbrace start_complit braced_keyval_list '}' 

	LBODY  shift 184
	'{'  shift 185
	.  error

	lbrace  goto 183

state 74
	pexpr_no_paren:  fnliteral.    (141)

	.  reduce 141 (src line 1022)


state 75
	convtype:  fntype.    (183)
	fnlitdcl:  fntype.    (217)

	'('  reduce 183 (src line 1231)
	.  reduce 217 (src line 1495)


state 76
	convtype:  othertype.    (184)
	comptype:  othertype.    (185)

	'('  reduce 184 (src line 1233)
	.  reduce 185 (src line 1235)


state 77
	fnliteral:  fnlitdcl.lbrace stmt_list '}' 
	fnliteral:  fnlitdcl.error 

	error  shift 187
	LBODY  shift 184
	'{'  shift 185
	.  error

	lbrace  goto 186

state 78
	othertype:  '['.oexpr ']' ntype 
	othertype:  '['.LDDD ']' ntype 
	oexpr: .    (292)

	LLITERAL  shift 69
	LCHAN  shift 79
	LDDD  shift 189
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 292 (src line 1910)

	sym  goto 124
	expr  goto 190
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	oexpr  goto 188
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 79
	othertype:  LCHAN.non_recvchantype 
	othertype:  LCHAN.LCOMM ntype 

	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 192
	'*'  shift 198
	'('  shift 197
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	dotname  goto 196
	name  goto 199
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 195
	non_recvchantype  goto 191
	othertype  goto 194
	fntype  goto 193
	hidden_importsym  goto 11

state 80
	othertype:  LMAP.'[' ntype ']' ntype 

	'['  shift 200
	.  error


state 81
	othertype:  structtype.    (198)

	.  reduce 198 (src line 1283)


state 82
	othertype:  interfacetype.    (199)

	.  reduce 199 (src line 1284)


state 83
	structtype:  LSTRUCT.lbrace structdcl_list osemi '}' 
	structtype:  LSTRUCT.lbrace '}' 

	LBODY  shift 184
	'{'  shift 185
	.  error

	lbrace  goto 201

state 84
	interfacetype:  LINTERFACE.lbrace interfacedcl_list osemi '}' 
	interfacetype:  LINTERFACE.lbrace '}' 

	LBODY  shift 184
	'{'  shift 185
	.  error

	lbrace  goto 202

state 85
	imports:  imports import ';'.    (7)

	.  reduce 7 (src line 169)


state 86
	import:  LIMPORT import_stmt.    (8)

	.  reduce 8 (src line 171)


state 87
	import:  LIMPORT '('.import_stmt_list osemi ')' 
	import:  LIMPORT '('.')' 

	LLITERAL  shift 89
	LNAME  shift 10
	')'  shift 204
	'.'  shift 91
	'?'  shift 12
	'@'  shift 13
	.  error

	import_here  goto 88
	sym  goto 90
	hidden_importsym  goto 11
	import_stmt  goto 205
	import_stmt_list  goto 203

state 88
	import_stmt:  import_here.import_package import_there 
	import_stmt:  import_here.import_there 
	$$21: .    (21)

	LPACKAGE  shift 7
	.  reduce 21 (src line 275)

	import_package  goto 206
	import_there  goto 207
	$$21  goto 15

state 89
	import_here:  LLITERAL.    (15)

	.  reduce 15 (src line 227)


state 90
	import_here:  sym.LLITERAL 

	LLITERAL  shift 208
	.  error


state 91
	import_here:  '.'.LLITERAL 

	LLITERAL  shift 209
	.  error


state 92
	hidden_importsym:  '@' LLITERAL '.'.LNAME 
	hidden_importsym:  '@' LLITERAL '.'.'?' 

	LNAME  shift 210
	'?'  shift 211
	.  error


state 93
	import_there:  $$21 hidden_import_list '$'.'$' 

	'$'  shift 212
	.  error


state 94
	hidden_import_list:  hidden_import_list hidden_import.    (347)

	.  reduce 347 (src line 2221)


state 95
	hidden_import:  LIMPORT.LNAME LLITERAL ';' 

	LNAME  shift 213
	.  error


state 96
	hidden_import:  LVAR.hidden_pkg_importsym hidden_type ';' 

	'@'  shift 13
	.  error

	hidden_importsym  goto 215
	hidden_pkg_importsym  goto 214

state 97
	hidden_import:  LCONST.hidden_pkg_importsym '=' hidden_constant ';' 
	hidden_import:  LCONST.hidden_pkg_importsym hidden_type '=' hidden_constant ';' 

	'@'  shift 13
	.  error

	hidden_importsym  goto 215
	hidden_pkg_importsym  goto 216

state 98
	hidden_import:  LTYPE.hidden_pkgtype hidden_type ';' 

	'@'  shift 13
	.  error

	hidden_importsym  goto 215
	hidden_pkg_importsym  goto 218
	hidden_pkgtype  goto 217

state 99
	hidden_import:  LFUNC.hidden_fndcl fnbody ';' 

	'('  shift 221
	'@'  shift 13
	.  error

	hidden_fndcl  goto 219
	hidden_importsym  goto 215
	hidden_pkg_importsym  goto 220

state 100
	import_package:  LPACKAGE LNAME import_safety ';'.    (18)

	.  reduce 18 (src line 250)


state 101
	xdcl_list:  xdcl_list xdcl ';'.    (221)

	.  reduce 221 (src line 1522)


state 102
	common_dcl:  LVAR vardcl.    (28)

	.  reduce 28 (src line 308)


state 103
	common_dcl:  LVAR '('.vardcl_list osemi ')' 
	common_dcl:  LVAR '('.')' 

	LNAME  shift 10
	')'  shift 223
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 106
	dcl_name  goto 105
	dcl_name_list  goto 104
	vardcl  goto 224
	vardcl_list  goto 222
	hidden_importsym  goto 11

state 104
	vardcl:  dcl_name_list.ntype 
	vardcl:  dcl_name_list.ntype '=' expr_list 
	vardcl:  dcl_name_list.'=' expr_list 
	dcl_name_list:  dcl_name_list.',' dcl_name 

	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'='  shift 226
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	','  shift 227
	.  error

	sym  goto 124
	ntype  goto 225
	dotname  goto 232
	name  goto 199
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 105
	dcl_name_list:  dcl_name.    (276)

	.  reduce 276 (src line 1841)


state 106
	dcl_name:  sym.    (156)

	.  reduce 156 (src line 1112)


state 107
	common_dcl:  lconst constdcl.    (31)

	.  reduce 31 (src line 321)


state 108
	common_dcl:  lconst '('.constdcl osemi ')' 
	common_dcl:  lconst '('.constdcl ';' constdcl_list osemi ')' 
	common_dcl:  lconst '('.')' 

	LNAME  shift 10
	')'  shift 236
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 106
	dcl_name  goto 105
	dcl_name_list  goto 109
	constdcl  goto 235
	hidden_importsym  goto 11

state 109
	constdcl:  dcl_name_list.ntype '=' expr_list 
	constdcl:  dcl_name_list.'=' expr_list 
	dcl_name_list:  dcl_name_list.',' dcl_name 

	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'='  shift 238
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	','  shift 227
	.  error

	sym  goto 124
	ntype  goto 237
	dotname  goto 232
	name  goto 199
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 110
	common_dcl:  LTYPE typedcl.    (35)

	.  reduce 35 (src line 344)


state 111
	common_dcl:  LTYPE '('.typedcl_list osemi ')' 
	common_dcl:  LTYPE '('.')' 

	LNAME  shift 10
	')'  shift 240
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 113
	typedclname  goto 112
	typedcl  goto 241
	typedcl_list  goto 239
	hidden_importsym  goto 11

state 112
	typedcl:  typedclname.ntype 

	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 242
	dotname  goto 232
	name  goto 199
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 113
	typedclname:  sym.    (47)

	.  reduce 47 (src line 398)


state 114
	xfndcl:  LFUNC fndcl.fnbody 
	fnbody: .    (212)

	'{'  shift 244
	.  reduce 212 (src line 1468)

	fnbody  goto 243

state 115
	fndcl:  '('.oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma ')' fnres 
	fntype:  LFUNC '('.oarg_type_list_ocomma ')' fnres 
	oarg_type_list_ocomma: .    (251)

	LCHAN  shift 79
	LDDD  shift 252
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 251 (src line 1718)

	sym  goto 249
	ntype  goto 251
	arg_type  goto 247
	dotname  goto 232
	name  goto 199
	name_or_type  goto 248
	oarg_type_list_ocomma  goto 245
	arg_type_list  goto 246
	dotdotdot  goto 250
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 116
	fndcl:  sym.'(' oarg_type_list_ocomma ')' fnres 

	'('  shift 253
	.  error


state 117
	non_dcl_stmt:  labelname ':'.$$263 stmt 
	$$263: .    (263)

	.  reduce 263 (src line 1751)

	$$263  goto 254

state 118
	non_dcl_stmt:  LBREAK onew_name.    (266)

	.  reduce 266 (src line 1773)


state 119
	onew_name:  new_name.    (158)

	.  reduce 158 (src line 1122)


state 120
	new_name:  sym.    (155)

	.  reduce 155 (src line 1102)


state 121
	non_dcl_stmt:  LCONTINUE onew_name.    (267)

	.  reduce 267 (src line 1777)


state 122
	pexpr_no_paren:  pseudocall.    (136)
	non_dcl_stmt:  LGO pseudocall.    (268)

	'('  reduce 136 (src line 995)
	'.'  reduce 136 (src line 995)
	'{'  reduce 136 (src line 995)
	'['  reduce 136 (src line 995)
	.  reduce 268 (src line 1781)


state 123
	pseudocall:  pexpr.'(' ')' 
	pseudocall:  pexpr.'(' expr_or_type_list ocomma ')' 
	pseudocall:  pexpr.'(' expr_or_type_list LDDD ocomma ')' 
	pexpr_no_paren:  pexpr.'.' sym 
	pexpr_no_paren:  pexpr.'.' '(' expr_or_type ')' 
	pexpr_no_paren:  pexpr.'.' '(' LTYPE ')' 
	pexpr_no_paren:  pexpr.'[' expr ']' 
	pexpr_no_paren:  pexpr.'[' oexpr ':' oexpr ']' 
	pexpr_no_paren:  pexpr.'[' oexpr ':' oexpr ':' oexpr ']' 

	'('  shift 162
	'.'  shift 163
	'['  shift 164
	.  error


state 124
	name:  sym.    (164)

	.  reduce 164 (src line 1169)


state 125
	fntype:  LFUNC.'(' oarg_type_list_ocomma ')' fnres 

	'('  shift 255
	.  error


state 126
	pexpr_no_paren:  pseudocall.    (136)
	non_dcl_stmt:  LDEFER pseudocall.    (269)

	'('  reduce 136 (src line 995)
	'.'  reduce 136 (src line 995)
	'{'  reduce 136 (src line 995)
	'['  reduce 136 (src line 995)
	.  reduce 269 (src line 1785)


state 127
	non_dcl_stmt:  LGOTO new_name.    (270)

	.  reduce 270 (src line 1789)


state 128
	non_dcl_stmt:  LRETURN oexpr_list.    (271)

	.  reduce 271 (src line 1794)


state 129
	expr_list:  expr_list.',' expr 
	oexpr_list:  expr_list.    (295)

	','  shift 157
	.  reduce 295 (src line 1920)


state 130
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 
	expr_list:  expr.    (278)

	LTHEN  shift 154
	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 278 (src line 1851)


state 131
	simple_stmt:  expr LASOP.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 256
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 132
	simple_stmt:  expr LINC.    (53)

	.  reduce 53 (src line 463)


state 133
	simple_stmt:  expr LDEC.    (54)

	.  reduce 54 (src line 469)


state 134
	expr:  expr LOROR.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 257
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 135
	expr:  expr LANDAND.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 258
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 136
	expr:  expr LEQ.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 259
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 137
	expr:  expr LNE.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 260
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 138
	expr:  expr LLT.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 261
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 139
	expr:  expr LLE.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 262
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 140
	expr:  expr LGE.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 263
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 141
	expr:  expr LGT.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 264
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 142
	expr:  expr '+'.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 265
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 143
	expr:  expr '-'.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 266
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 144
	expr:  expr '|'.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 267
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 145
	expr:  expr '^'.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 268
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 146
	expr:  expr '*'.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 269
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 147
	expr:  expr '/'.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 270
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 148
	expr:  expr '%'.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 271
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 149
	expr:  expr '&'.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 272
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 150
	expr:  expr LANDNOT.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 273
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 151
	expr:  expr LLSH.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 274
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 152
	expr:  expr LRSH.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 275
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 153
	expr:  expr LCOMM.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 276
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 154
	ternaryexpr:  expr LTHEN.expr LELSE expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 277
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 155
	simple_stmt:  expr_list '='.expr_list 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 130
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	expr_list  goto 278
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 156
	simple_stmt:  expr_list LCOLAS.expr_list 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 130
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	expr_list  goto 279
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 157
	expr_list:  expr_list ','.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 280
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 158
	for_stmt:  LFOR $$74.for_body 
	osimple_stmt: .    (296)

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LRANGE  shift 287
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 296 (src line 1922)

	sym  goto 124
	expr  goto 48
	ternaryexpr  goto 55
	fnliteral  goto 74
	for_body  goto 281
	for_header  goto 282
	name  goto 70
	osimple_stmt  goto 283
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	range_stmt  goto 284
	simple_stmt  goto 285
	uexpr  goto 56
	expr_list  goto 286
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 159
	switch_stmt:  LSWITCH $$88.if_header $$89 LBODY caseblock_list '}' 
	osimple_stmt: .    (296)

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 296 (src line 1922)

	sym  goto 124
	expr  goto 48
	ternaryexpr  goto 55
	fnliteral  goto 74
	if_header  goto 288
	name  goto 70
	osimple_stmt  goto 289
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	simple_stmt  goto 285
	uexpr  goto 56
	expr_list  goto 49
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 160
	select_stmt:  LSELECT $$91.LBODY caseblock_list '}' 

	LBODY  shift 290
	.  error


state 161
	if_stmt:  LIF $$78.if_header $$79 loop_body $$80 elseif_list else 
	osimple_stmt: .    (296)

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 296 (src line 1922)

	sym  goto 124
	expr  goto 48
	ternaryexpr  goto 55
	fnliteral  goto 74
	if_header  goto 291
	name  goto 70
	osimple_stmt  goto 289
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	simple_stmt  goto 285
	uexpr  goto 56
	expr_list  goto 49
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 162
	pseudocall:  pexpr '('.')' 
	pseudocall:  pexpr '('.expr_or_type_list ocomma ')' 
	pseudocall:  pexpr '('.expr_or_type_list LDDD ocomma ')' 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 181
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 180
	'&'  shift 60
	'('  shift 68
	')'  shift 292
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 175
	ternaryexpr  goto 55
	expr_or_type  goto 294
	fnliteral  goto 74
	name  goto 70
	non_expr_type  goto 176
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	expr_or_type_list  goto 293
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	recvchantype  goto 177
	othertype  goto 179
	fntype  goto 178
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 163
	pexpr_no_paren:  pexpr '.'.sym 
	pexpr_no_paren:  pexpr '.'.'(' expr_or_type ')' 
	pexpr_no_paren:  pexpr '.'.'(' LTYPE ')' 

	LNAME  shift 10
	'('  shift 296
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 295
	hidden_importsym  goto 11

state 164
	pexpr_no_paren:  pexpr '['.expr ']' 
	pexpr_no_paren:  pexpr '['.oexpr ':' oexpr ']' 
	pexpr_no_paren:  pexpr '['.oexpr ':' oexpr ':' oexpr ']' 
	oexpr: .    (292)

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 292 (src line 1910)

	sym  goto 124
	expr  goto 297
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	oexpr  goto 298
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 165
	uexpr:  '*' uexpr.    (117)

	.  reduce 117 (src line 890)


state 166
	uexpr:  '&' uexpr.    (118)

	.  reduce 118 (src line 894)


state 167
	uexpr:  '+' uexpr.    (119)

	.  reduce 119 (src line 905)


state 168
	uexpr:  '-' uexpr.    (120)

	.  reduce 120 (src line 909)


state 169
	uexpr:  '!' uexpr.    (121)

	.  reduce 121 (src line 913)


state 170
	uexpr:  '~' uexpr.    (122)

	.  reduce 122 (src line 917)


state 171
	uexpr:  '^' uexpr.    (123)

	.  reduce 123 (src line 922)


state 172
	uexpr:  LCOMM uexpr.    (124)

	.  reduce 124 (src line 926)


state 173
	pexpr_no_paren:  pexpr_no_paren '{'.start_complit braced_keyval_list '}' 
	start_complit: .    (142)

	.  reduce 142 (src line 1024)

	start_complit  goto 299

state 174
	pexpr_no_paren:  '(' expr_or_type.')' '{' start_complit braced_keyval_list '}' 
	pexpr:  '(' expr_or_type.')' 

	')'  shift 300
	.  error


state 175
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 
	expr_or_type:  expr.    (150)

	LTHEN  shift 154
	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 150 (src line 1080)


state 176
	expr_or_type:  non_expr_type.    (151)

	.  reduce 151 (src line 1082)


state 177
	non_expr_type:  recvchantype.    (174)

	.  reduce 174 (src line 1212)


state 178
	non_expr_type:  fntype.    (175)
	convtype:  fntype.    (183)
	fnlitdcl:  fntype.    (217)

	error  reduce 217 (src line 1495)
	LBODY  reduce 217 (src line 1495)
	'('  reduce 183 (src line 1231)
	'{'  reduce 217 (src line 1495)
	.  reduce 175 (src line 1214)


state 179
	non_expr_type:  othertype.    (176)
	convtype:  othertype.    (184)
	comptype:  othertype.    (185)

	LBODY  reduce 185 (src line 1235)
	'('  reduce 184 (src line 1233)
	'{'  reduce 185 (src line 1235)
	.  reduce 176 (src line 1215)


state 180
	uexpr:  '*'.uexpr 
	non_expr_type:  '*'.non_expr_type 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 181
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 180
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 74
	name  goto 70
	non_expr_type  goto 301
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 165
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	recvchantype  goto 177
	othertype  goto 179
	fntype  goto 178
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 181
	uexpr:  LCOMM.uexpr 
	recvchantype:  LCOMM.LCHAN ntype 

	LLITERAL  shift 69
	LCHAN  shift 302
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 172
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 182
	pexpr_no_paren:  convtype '('.expr ocomma ')' 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 303
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 183
	pexpr_no_paren:  comptype lbrace.start_complit braced_keyval_list '}' 
	start_complit: .    (142)

	.  reduce 142 (src line 1024)

	start_complit  goto 304

state 184
	lbrace:  LBODY.    (153)

	.  reduce 153 (src line 1087)


state 185
	lbrace:  '{'.    (154)

	.  reduce 154 (src line 1092)


state 186
	fnliteral:  fnlitdcl lbrace.stmt_list '}' 
	stmt: .    (253)

	error  shift 310
	LLITERAL  shift 69
	LBREAK  shift 41
	LCHAN  shift 79
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 125
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 83
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	';'  reduce 253 (src line 1730)
	'{'  shift 311
	'}'  reduce 253 (src line 1730)
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 57
	stmt  goto 306
	compound_stmt  goto 307
	expr  goto 48
	ternaryexpr  goto 55
	fnliteral  goto 74
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 309
	labelname  goto 39
	name  goto 70
	new_name  goto 54
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 56
	expr_list  goto 49
	stmt_list  goto 305
	common_dcl  goto 308
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 77

state 187
	fnliteral:  fnlitdcl error.    (219)

	.  reduce 219 (src line 1507)


state 188
	othertype:  '[' oexpr.']' ntype 

	']'  shift 312
	.  error


state 189
	othertype:  '[' LDDD.']' ntype 

	']'  shift 313
	.  error


state 190
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 
	oexpr:  expr.    (293)

	LTHEN  shift 154
	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 293 (src line 1914)


state 191
	othertype:  LCHAN non_recvchantype.    (195)

	.  reduce 195 (src line 1269)


state 192
	othertype:  LCHAN LCOMM.ntype 

	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 314
	dotname  goto 232
	name  goto 199
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 193
	non_recvchantype:  fntype.    (178)

	.  reduce 178 (src line 1221)


state 194
	non_recvchantype:  othertype.    (179)

	.  reduce 179 (src line 1223)


state 195
	non_recvchantype:  ptrtype.    (180)

	.  reduce 180 (src line 1224)


state 196
	non_recvchantype:  dotname.    (181)

	.  reduce 181 (src line 1225)


state 197
	non_recvchantype:  '('.ntype ')' 

	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 315
	dotname  goto 232
	name  goto 199
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 198
	ptrtype:  '*'.ntype 

	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 316
	dotname  goto 232
	name  goto 199
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 199
	dotname:  name.    (191)
	dotname:  name.'.' sym 

	'.'  shift 317
	.  reduce 191 (src line 1245)


state 200
	othertype:  LMAP '['.ntype ']' ntype 

	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 318
	dotname  goto 232
	name  goto 199
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 201
	structtype:  LSTRUCT lbrace.structdcl_list osemi '}' 
	structtype:  LSTRUCT lbrace.'}' 

	LNAME  shift 328
	'*'  shift 325
	'('  shift 324
	'}'  shift 320
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 120
	packname  goto 327
	embed  goto 323
	new_name  goto 326
	new_name_list  goto 322
	structdcl  goto 321
	structdcl_list  goto 319
	hidden_importsym  goto 11

state 202
	interfacetype:  LINTERFACE lbrace.interfacedcl_list osemi '}' 
	interfacetype:  LINTERFACE lbrace.'}' 

	LNAME  shift 328
	'('  shift 334
	'}'  shift 330
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 120
	packname  goto 333
	interfacedcl  goto 331
	new_name  goto 332
	interfacedcl_list  goto 329
	hidden_importsym  goto 11

state 203
	import:  LIMPORT '(' import_stmt_list.osemi ')' 
	import_stmt_list:  import_stmt_list.';' import_stmt 
	osemi: .    (288)

	';'  shift 336
	.  reduce 288 (src line 1904)

	osemi  goto 335

state 204
	import:  LIMPORT '(' ')'.    (10)

	.  reduce 10 (src line 174)


state 205
	import_stmt_list:  import_stmt.    (13)

	.  reduce 13 (src line 223)


state 206
	import_stmt:  import_here import_package.import_there 
	$$21: .    (21)

	.  reduce 21 (src line 275)

	import_there  goto 337
	$$21  goto 15

state 207
	import_stmt:  import_here import_there.    (12)

	.  reduce 12 (src line 212)


state 208
	import_here:  sym LLITERAL.    (16)

	.  reduce 16 (src line 235)


state 209
	import_here:  '.' LLITERAL.    (17)

	.  reduce 17 (src line 242)


state 210
	hidden_importsym:  '@' LLITERAL '.' LNAME.    (162)

	.  reduce 162 (src line 1139)


state 211
	hidden_importsym:  '@' LLITERAL '.' '?'.    (163)

	.  reduce 163 (src line 1154)


state 212
	import_there:  $$21 hidden_import_list '$' '$'.    (22)

	.  reduce 22 (src line 279)


state 213
	hidden_import:  LIMPORT LNAME.LLITERAL ';' 

	LLITERAL  shift 338
	.  error


state 214
	hidden_import:  LVAR hidden_pkg_importsym.hidden_type ';' 

	LCHAN  shift 350
	LFUNC  shift 352
	LINTERFACE  shift 348
	LMAP  shift 346
	LNAME  shift 344
	LSTRUCT  shift 347
	LCOMM  shift 351
	'*'  shift 349
	'['  shift 345
	'@'  shift 13
	.  error

	hidden_importsym  goto 343
	hidden_type  goto 339
	hidden_type_misc  goto 340
	hidden_type_func  goto 342
	hidden_type_recv_chan  goto 341

state 215
	hidden_pkg_importsym:  hidden_importsym.    (312)

	.  reduce 312 (src line 1996)


state 216
	hidden_import:  LCONST hidden_pkg_importsym.'=' hidden_constant ';' 
	hidden_import:  LCONST hidden_pkg_importsym.hidden_type '=' hidden_constant ';' 

	LCHAN  shift 350
	LFUNC  shift 352
	LINTERFACE  shift 348
	LMAP  shift 346
	LNAME  shift 344
	LSTRUCT  shift 347
	LCOMM  shift 351
	'*'  shift 349
	'='  shift 353
	'['  shift 345
	'@'  shift 13
	.  error

	hidden_importsym  goto 343
	hidden_type  goto 354
	hidden_type_misc  goto 340
	hidden_type_func  goto 342
	hidden_type_recv_chan  goto 341

state 217
	hidden_import:  LTYPE hidden_pkgtype.hidden_type ';' 

	LCHAN  shift 350
	LFUNC  shift 352
	LINTERFACE  shift 348
	LMAP  shift 346
	LNAME  shift 344
	LSTRUCT  shift 347
	LCOMM  shift 351
	'*'  shift 349
	'['  shift 345
	'@'  shift 13
	.  error

	hidden_importsym  goto 343
	hidden_type  goto 355
	hidden_type_misc  goto 340
	hidden_type_func  goto 342
	hidden_type_recv_chan  goto 341

state 218
	hidden_pkgtype:  hidden_pkg_importsym.    (313)

	.  reduce 313 (src line 2003)


state 219
	hidden_import:  LFUNC hidden_fndcl.fnbody ';' 
	fnbody: .    (212)

	'{'  shift 244
	.  reduce 212 (src line 1468)

	fnbody  goto 356

state 220
	hidden_fndcl:  hidden_pkg_importsym.'(' ohidden_funarg_list ')' ohidden_funres 

	'('  shift 357
	.  error


state 221
	hidden_fndcl:  '('.hidden_funarg_list ')' sym '(' ohidden_funarg_list ')' ohidden_funres 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 360
	hidden_importsym  goto 11
	hidden_funarg  goto 359
	hidden_funarg_list  goto 358

state 222
	common_dcl:  LVAR '(' vardcl_list.osemi ')' 
	vardcl_list:  vardcl_list.';' vardcl 
	osemi: .    (288)

	';'  shift 362
	.  reduce 288 (src line 1904)

	osemi  goto 361

state 223
	common_dcl:  LVAR '(' ')'.    (30)

	.  reduce 30 (src line 317)


state 224
	vardcl_list:  vardcl.    (222)

	.  reduce 222 (src line 1534)


state 225
	vardcl:  dcl_name_list ntype.    (39)
	vardcl:  dcl_name_list ntype.'=' expr_list 

	'='  shift 363
	.  reduce 39 (src line 363)


state 226
	vardcl:  dcl_name_list '='.expr_list 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 130
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	expr_list  goto 364
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 227
	dcl_name_list:  dcl_name_list ','.dcl_name 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 106
	dcl_name  goto 365
	hidden_importsym  goto 11

state 228
	ntype:  recvchantype.    (168)

	.  reduce 168 (src line 1201)


state 229
	ntype:  fntype.    (169)

	.  reduce 169 (src line 1203)


state 230
	ntype:  othertype.    (170)

	.  reduce 170 (src line 1204)


state 231
	ntype:  ptrtype.    (171)

	.  reduce 171 (src line 1205)


state 232
	ntype:  dotname.    (172)

	.  reduce 172 (src line 1206)


state 233
	ntype:  '('.ntype ')' 

	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 366
	dotname  goto 232
	name  goto 199
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 234
	recvchantype:  LCOMM.LCHAN ntype 

	LCHAN  shift 367
	.  error


state 235
	common_dcl:  lconst '(' constdcl.osemi ')' 
	common_dcl:  lconst '(' constdcl.';' constdcl_list osemi ')' 
	osemi: .    (288)

	';'  shift 369
	.  reduce 288 (src line 1904)

	osemi  goto 368

state 236
	common_dcl:  lconst '(' ')'.    (34)

	.  reduce 34 (src line 339)


state 237
	constdcl:  dcl_name_list ntype.'=' expr_list 

	'='  shift 370
	.  error


state 238
	constdcl:  dcl_name_list '='.expr_list 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 130
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	expr_list  goto 371
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 239
	common_dcl:  LTYPE '(' typedcl_list.osemi ')' 
	typedcl_list:  typedcl_list.';' typedcl 
	osemi: .    (288)

	';'  shift 373
	.  reduce 288 (src line 1904)

	osemi  goto 372

state 240
	common_dcl:  LTYPE '(' ')'.    (37)

	.  reduce 37 (src line 352)


state 241
	typedcl_list:  typedcl.    (226)

	.  reduce 226 (src line 1548)


state 242
	typedcl:  typedclname ntype.    (48)

	.  reduce 48 (src line 407)


state 243
	xfndcl:  LFUNC fndcl fnbody.    (206)

	.  reduce 206 (src line 1329)


state 244
	fnbody:  '{'.stmt_list '}' 
	stmt: .    (253)

	error  shift 310
	LLITERAL  shift 69
	LBREAK  shift 41
	LCHAN  shift 79
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 125
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 83
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	';'  reduce 253 (src line 1730)
	'{'  shift 311
	'}'  reduce 253 (src line 1730)
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 57
	stmt  goto 306
	compound_stmt  goto 307
	expr  goto 48
	ternaryexpr  goto 55
	fnliteral  goto 74
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 309
	labelname  goto 39
	name  goto 70
	new_name  goto 54
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 56
	expr_list  goto 49
	stmt_list  goto 374
	common_dcl  goto 308
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 77

state 245
	fndcl:  '(' oarg_type_list_ocomma.')' sym '(' oarg_type_list_ocomma ')' fnres 
	fntype:  LFUNC '(' oarg_type_list_ocomma.')' fnres 

	')'  shift 375
	.  error


state 246
	arg_type_list:  arg_type_list.',' arg_type 
	oarg_type_list_ocomma:  arg_type_list.ocomma 
	ocomma: .    (290)

	','  shift 376
	.  reduce 290 (src line 1907)

	ocomma  goto 377

state 247
	arg_type_list:  arg_type.    (249)

	.  reduce 249 (src line 1708)


state 248
	arg_type:  name_or_type.    (245)

	.  reduce 245 (src line 1692)


state 249
	name:  sym.    (164)
	arg_type:  sym.name_or_type 
	arg_type:  sym.dotdotdot 

	LCHAN  shift 79
	LDDD  shift 252
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 164 (src line 1169)

	sym  goto 124
	ntype  goto 251
	dotname  goto 232
	name  goto 199
	name_or_type  goto 378
	dotdotdot  goto 379
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 250
	arg_type:  dotdotdot.    (248)

	.  reduce 248 (src line 1706)


state 251
	name_or_type:  ntype.    (152)

	.  reduce 152 (src line 1084)


state 252
	dotdotdot:  LDDD.    (166)
	dotdotdot:  LDDD.ntype 

	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 166 (src line 1190)

	sym  goto 124
	ntype  goto 380
	dotname  goto 232
	name  goto 199
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 253
	fndcl:  sym '('.oarg_type_list_ocomma ')' fnres 
	oarg_type_list_ocomma: .    (251)

	LCHAN  shift 79
	LDDD  shift 252
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 251 (src line 1718)

	sym  goto 249
	ntype  goto 251
	arg_type  goto 247
	dotname  goto 232
	name  goto 199
	name_or_type  goto 248
	oarg_type_list_ocomma  goto 381
	arg_type_list  goto 246
	dotdotdot  goto 250
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 254
	non_dcl_stmt:  labelname ':' $$263.stmt 
	stmt: .    (253)

	error  shift 310
	LLITERAL  shift 69
	LBREAK  shift 41
	LCASE  reduce 253 (src line 1730)
	LCHAN  shift 79
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFAULT  reduce 253 (src line 1730)
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 125
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 83
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	';'  reduce 253 (src line 1730)
	'{'  shift 311
	'}'  reduce 253 (src line 1730)
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 57
	stmt  goto 382
	compound_stmt  goto 307
	expr  goto 48
	ternaryexpr  goto 55
	fnliteral  goto 74
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 309
	labelname  goto 39
	name  goto 70
	new_name  goto 54
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 56
	expr_list  goto 49
	common_dcl  goto 308
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 77

state 255
	fntype:  LFUNC '('.oarg_type_list_ocomma ')' fnres 
	oarg_type_list_ocomma: .    (251)

	LCHAN  shift 79
	LDDD  shift 252
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 251 (src line 1718)

	sym  goto 249
	ntype  goto 251
	arg_type  goto 247
	dotname  goto 232
	name  goto 199
	name_or_type  goto 248
	oarg_type_list_ocomma  goto 383
	arg_type_list  goto 246
	dotdotdot  goto 250
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 256
	simple_stmt:  expr LASOP expr.    (50)
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	LTHEN  shift 154
	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 50 (src line 428)


state 257
	expr:  expr.LOROR expr 
	expr:  expr LOROR expr.    (95)
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	LANDAND  shift 135
	LANDNOT  shift 150
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 95 (src line 799)


state 258
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr LANDAND expr.    (96)
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	LANDNOT  shift 150
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 96 (src line 803)


state 259
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr LEQ expr.    (97)
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	LANDNOT  shift 150
	LLSH  shift 151
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 97 (src line 807)


state 260
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr LNE expr.    (98)
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	LANDNOT  shift 150
	LLSH  shift 151
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 98 (src line 811)


state 261
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr LLT expr.    (99)
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	LANDNOT  shift 150
	LLSH  shift 151
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 99 (src line 815)


state 262
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr LLE expr.    (100)
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	LANDNOT  shift 150
	LLSH  shift 151
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 100 (src line 819)


state 263
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr LGE expr.    (101)
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	LANDNOT  shift 150
	LLSH  shift 151
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 101 (src line 823)


state 264
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr LGT expr.    (102)
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	LANDNOT  shift 150
	LLSH  shift 151
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 102 (src line 827)


state 265
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr '+' expr.    (103)
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	LANDNOT  shift 150
	LLSH  shift 151
	LRSH  shift 152
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 103 (src line 831)


state 266
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr '-' expr.    (104)
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	LANDNOT  shift 150
	LLSH  shift 151
	LRSH  shift 152
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 104 (src line 835)


state 267
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr '|' expr.    (105)
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	LANDNOT  shift 150
	LLSH  shift 151
	LRSH  shift 152
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 105 (src line 839)


state 268
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr '^' expr.    (106)
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	LANDNOT  shift 150
	LLSH  shift 151
	LRSH  shift 152
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 106 (src line 843)


state 269
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr '*' expr.    (107)
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	.  reduce 107 (src line 847)


state 270
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr '/' expr.    (108)
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	.  reduce 108 (src line 851)


state 271
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr '%' expr.    (109)
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	.  reduce 109 (src line 855)


state 272
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr '&' expr.    (110)
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	.  reduce 110 (src line 859)


state 273
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr LANDNOT expr.    (111)
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	.  reduce 111 (src line 863)


state 274
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr LLSH expr.    (112)
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	.  reduce 112 (src line 867)


state 275
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr LRSH expr.    (113)
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	.  reduce 113 (src line 871)


state 276
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	expr:  expr LCOMM expr.    (114)
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	LTHEN  shift 154
	LANDAND  shift 135
	LANDNOT  shift 150
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 114 (src line 876)


state 277
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 
	ternaryexpr:  expr LTHEN expr.LELSE expr 

	LELSE  shift 384
	LTHEN  shift 154
	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  error


state 278
	simple_stmt:  expr_list '=' expr_list.    (51)
	expr_list:  expr_list.',' expr 

	','  shift 157
	.  reduce 51 (src line 433)


state 279
	simple_stmt:  expr_list LCOLAS expr_list.    (52)
	expr_list:  expr_list.',' expr 

	','  shift 157
	.  reduce 52 (src line 445)


state 280
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 
	expr_list:  expr_list ',' expr.    (279)

	LTHEN  shift 154
	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 279 (src line 1856)


state 281
	for_stmt:  LFOR $$74 for_body.    (75)

	.  reduce 75 (src line 667)


state 282
	for_body:  for_header.loop_body 

	LBODY  shift 386
	.  error

	loop_body  goto 385

state 283
	for_header:  osimple_stmt.';' osimple_stmt ';' osimple_stmt 
	for_header:  osimple_stmt.    (71)

	';'  shift 387
	.  reduce 71 (src line 647)


state 284
	for_header:  range_stmt.    (72)

	.  reduce 72 (src line 653)


state 285
	osimple_stmt:  simple_stmt.    (297)

	.  reduce 297 (src line 1926)


state 286
	simple_stmt:  expr_list.'=' expr_list 
	simple_stmt:  expr_list.LCOLAS expr_list 
	range_stmt:  expr_list.'=' LRANGE expr 
	range_stmt:  expr_list.LCOLAS LRANGE expr 
	expr_list:  expr_list.',' expr 

	LCOLAS  shift 389
	'='  shift 388
	','  shift 157
	.  error


state 287
	range_stmt:  LRANGE.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 390
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 288
	switch_stmt:  LSWITCH $$88 if_header.$$89 LBODY caseblock_list '}' 
	$$89: .    (89)

	.  reduce 89 (src line 762)

	$$89  goto 391

state 289
	if_header:  osimple_stmt.    (76)
	if_header:  osimple_stmt.';' osimple_stmt 

	';'  shift 392
	.  reduce 76 (src line 673)


state 290
	select_stmt:  LSELECT $$91 LBODY.caseblock_list '}' 
	caseblock_list: .    (63)

	.  reduce 63 (src line 593)

	caseblock_list  goto 393

state 291
	if_stmt:  LIF $$78 if_header.$$79 loop_body $$80 elseif_list else 
	$$79: .    (79)

	.  reduce 79 (src line 696)

	$$79  goto 394

state 292
	pseudocall:  pexpr '(' ')'.    (125)

	.  reduce 125 (src line 935)


state 293
	pseudocall:  pexpr '(' expr_or_type_list.ocomma ')' 
	pseudocall:  pexpr '(' expr_or_type_list.LDDD ocomma ')' 
	expr_or_type_list:  expr_or_type_list.',' expr_or_type 
	ocomma: .    (290)

	LDDD  shift 396
	','  shift 397
	.  reduce 290 (src line 1907)

	ocomma  goto 395

state 294
	expr_or_type_list:  expr_or_type.    (280)

	.  reduce 280 (src line 1861)


state 295
	pexpr_no_paren:  pexpr '.' sym.    (130)

	.  reduce 130 (src line 958)


state 296
	pexpr_no_paren:  pexpr '.' '('.expr_or_type ')' 
	pexpr_no_paren:  pexpr '.' '('.LTYPE ')' 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LTYPE  shift 399
	LCOMM  shift 181
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 180
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 175
	ternaryexpr  goto 55
	expr_or_type  goto 398
	fnliteral  goto 74
	name  goto 70
	non_expr_type  goto 176
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	recvchantype  goto 177
	othertype  goto 179
	fntype  goto 178
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 297
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 
	pexpr_no_paren:  pexpr '[' expr.']' 
	oexpr:  expr.    (293)

	LTHEN  shift 154
	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	']'  shift 400
	.  reduce 293 (src line 1914)


state 298
	pexpr_no_paren:  pexpr '[' oexpr.':' oexpr ']' 
	pexpr_no_paren:  pexpr '[' oexpr.':' oexpr ':' oexpr ']' 

	':'  shift 401
	.  error


state 299
	pexpr_no_paren:  pexpr_no_paren '{' start_complit.braced_keyval_list '}' 
	braced_keyval_list: .    (286)

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'{'  shift 407
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 286 (src line 1892)

	sym  goto 124
	expr  goto 406
	ternaryexpr  goto 55
	bare_complitexpr  goto 405
	fnliteral  goto 74
	keyval  goto 404
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	keyval_list  goto 403
	braced_keyval_list  goto 402
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 300
	pexpr_no_paren:  '(' expr_or_type ')'.'{' start_complit braced_keyval_list '}' 
	pexpr:  '(' expr_or_type ')'.    (149)

	'{'  shift 408
	.  reduce 149 (src line 1067)


state 301
	non_expr_type:  '*' non_expr_type.    (177)

	.  reduce 177 (src line 1216)


state 302
	othertype:  LCHAN.non_recvchantype 
	othertype:  LCHAN.LCOMM ntype 
	recvchantype:  LCOMM LCHAN.ntype 

	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 409
	'*'  shift 198
	'('  shift 415
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 410
	dotname  goto 414
	name  goto 199
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 413
	recvchantype  goto 228
	non_recvchantype  goto 191
	othertype  goto 412
	fntype  goto 411
	hidden_importsym  goto 11

state 303
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 
	pexpr_no_paren:  convtype '(' expr.ocomma ')' 
	ocomma: .    (290)

	LTHEN  shift 154
	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	','  shift 417
	.  reduce 290 (src line 1907)

	ocomma  goto 416

state 304
	pexpr_no_paren:  comptype lbrace start_complit.braced_keyval_list '}' 
	braced_keyval_list: .    (286)

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'{'  shift 407
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 286 (src line 1892)

	sym  goto 124
	expr  goto 406
	ternaryexpr  goto 55
	bare_complitexpr  goto 405
	fnliteral  goto 74
	keyval  goto 404
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	keyval_list  goto 403
	braced_keyval_list  goto 418
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 305
	fnliteral:  fnlitdcl lbrace stmt_list.'}' 
	stmt_list:  stmt_list.';' stmt 

	';'  shift 420
	'}'  shift 419
	.  error


state 306
	stmt_list:  stmt.    (272)

	.  reduce 272 (src line 1815)


state 307
	stmt:  compound_stmt.    (254)

	.  reduce 254 (src line 1734)


state 308
	stmt:  common_dcl.    (255)

	.  reduce 255 (src line 1735)


state 309
	stmt:  non_dcl_stmt.    (256)

	.  reduce 256 (src line 1739)


state 310
	stmt:  error.    (257)

	.  reduce 257 (src line 1740)


state 311
	compound_stmt:  '{'.$$59 stmt_list '}' 
	$$59: .    (59)

	.  reduce 59 (src line 547)

	$$59  goto 421

state 312
	othertype:  '[' oexpr ']'.ntype 

	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 422
	dotname  goto 232
	name  goto 199
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 313
	othertype:  '[' LDDD ']'.ntype 

	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 423
	dotname  goto 232
	name  goto 199
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 314
	othertype:  LCHAN LCOMM ntype.    (196)

	.  reduce 196 (src line 1274)


state 315
	non_recvchantype:  '(' ntype.')' 

	')'  shift 424
	.  error


state 316
	ptrtype:  '*' ntype.    (200)

	.  reduce 200 (src line 1286)


state 317
	dotname:  name '.'.sym 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 425
	hidden_importsym  goto 11

state 318
	othertype:  LMAP '[' ntype.']' ntype 

	']'  shift 426
	.  error


state 319
	structtype:  LSTRUCT lbrace structdcl_list.osemi '}' 
	structdcl_list:  structdcl_list.';' structdcl 
	osemi: .    (288)

	';'  shift 428
	.  reduce 288 (src line 1904)

	osemi  goto 427

state 320
	structtype:  LSTRUCT lbrace '}'.    (203)

	.  reduce 203 (src line 1306)


state 321
	structdcl_list:  structdcl.    (228)

	.  reduce 228 (src line 1558)


state 322
	structdcl:  new_name_list.ntype oliteral 
	new_name_list:  new_name_list.',' new_name 

	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	','  shift 430
	.  error

	sym  goto 124
	ntype  goto 429
	dotname  goto 232
	name  goto 199
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 323
	structdcl:  embed.oliteral 
	oliteral: .    (304)

	LLITERAL  shift 432
	.  reduce 304 (src line 1946)

	oliteral  goto 431

state 324
	structdcl:  '('.embed ')' oliteral 
	structdcl:  '('.'*' embed ')' oliteral 

	LNAME  shift 435
	'*'  shift 434
	.  error

	packname  goto 327
	embed  goto 433

state 325
	structdcl:  '*'.embed oliteral 
	structdcl:  '*'.'(' embed ')' oliteral 

	LNAME  shift 435
	'('  shift 437
	.  error

	packname  goto 327
	embed  goto 436

state 326
	new_name_list:  new_name.    (274)

	.  reduce 274 (src line 1831)


state 327
	embed:  packname.    (240)

	.  reduce 240 (src line 1657)


state 328
	sym:  LNAME.    (159)
	packname:  LNAME.    (238)
	packname:  LNAME.'.' sym 

	LLITERAL  reduce 238 (src line 1632)
	';'  reduce 238 (src line 1632)
	'.'  shift 438
	'}'  reduce 238 (src line 1632)
	.  reduce 159 (src line 1124)


state 329
	interfacetype:  LINTERFACE lbrace interfacedcl_list.osemi '}' 
	interfacedcl_list:  interfacedcl_list.';' interfacedcl 
	osemi: .    (288)

	';'  shift 440
	.  reduce 288 (src line 1904)

	osemi  goto 439

state 330
	interfacetype:  LINTERFACE lbrace '}'.    (205)

	.  reduce 205 (src line 1319)


state 331
	interfacedcl_list:  interfacedcl.    (230)

	.  reduce 230 (src line 1565)


state 332
	interfacedcl:  new_name.indcl 

	'('  shift 442
	.  error

	indcl  goto 441

state 333
	interfacedcl:  packname.    (242)

	.  reduce 242 (src line 1669)


state 334
	interfacedcl:  '('.packname ')' 

	LNAME  shift 435
	.  error

	packname  goto 443

state 335
	import:  LIMPORT '(' import_stmt_list osemi.')' 

	')'  shift 444
	.  error


state 336
	import_stmt_list:  import_stmt_list ';'.import_stmt 
	osemi:  ';'.    (289)

	LLITERAL  shift 89
	LNAME  shift 10
	'.'  shift 91
	'?'  shift 12
	'@'  shift 13
	.  reduce 289 (src line 1905)

	import_here  goto 88
	sym  goto 90
	hidden_importsym  goto 11
	import_stmt  goto 445

state 337
	import_stmt:  import_here import_package import_there.    (11)

	.  reduce 11 (src line 176)


state 338
	hidden_import:  LIMPORT LNAME LLITERAL.';' 

	';'  shift 446
	.  error


state 339
	hidden_import:  LVAR hidden_pkg_importsym hidden_type.';' 

	';'  shift 447
	.  error


state 340
	hidden_type:  hidden_type_misc.    (314)

	.  reduce 314 (src line 2014)


state 341
	hidden_type:  hidden_type_recv_chan.    (315)

	.  reduce 315 (src line 2016)


state 342
	hidden_type:  hidden_type_func.    (316)

	.  reduce 316 (src line 2017)


state 343
	hidden_type_misc:  hidden_importsym.    (319)

	.  reduce 319 (src line 2023)


state 344
	hidden_type_misc:  LNAME.    (320)

	.  reduce 320 (src line 2028)


state 345
	hidden_type_misc:  '['.']' hidden_type 
	hidden_type_misc:  '['.LLITERAL ']' hidden_type 

	LLITERAL  shift 449
	']'  shift 448
	.  error


state 346
	hidden_type_misc:  LMAP.'[' hidden_type ']' hidden_type 

	'['  shift 450
	.  error


state 347
	hidden_type_misc:  LSTRUCT.'{' ohidden_structdcl_list '}' 

	'{'  shift 451
	.  error


state 348
	hidden_type_misc:  LINTERFACE.'{' ohidden_interfacedcl_list '}' 

	'{'  shift 452
	.  error


state 349
	hidden_type_misc:  '*'.hidden_type 

	LCHAN  shift 350
	LFUNC  shift 352
	LINTERFACE  shift 348
	LMAP  shift 346
	LNAME  shift 344
	LSTRUCT  shift 347
	LCOMM  shift 351
	'*'  shift 349
	'['  shift 345
	'@'  shift 13
	.  error

	hidden_importsym  goto 343
	hidden_type  goto 453
	hidden_type_misc  goto 340
	hidden_type_func  goto 342
	hidden_type_recv_chan  goto 341

state 350
	hidden_type_misc:  LCHAN.hidden_type_non_recv_chan 
	hidden_type_misc:  LCHAN.'(' hidden_type_recv_chan ')' 
	hidden_type_misc:  LCHAN.LCOMM hidden_type 

	LCHAN  shift 350
	LFUNC  shift 352
	LINTERFACE  shift 348
	LMAP  shift 346
	LNAME  shift 344
	LSTRUCT  shift 347
	LCOMM  shift 456
	'*'  shift 349
	'('  shift 455
	'['  shift 345
	'@'  shift 13
	.  error

	hidden_importsym  goto 343
	hidden_type_misc  goto 457
	hidden_type_func  goto 458
	hidden_type_non_recv_chan  goto 454

state 351
	hidden_type_recv_chan:  LCOMM.LCHAN hidden_type 

	LCHAN  shift 459
	.  error


state 352
	hidden_type_func:  LFUNC.'(' ohidden_funarg_list ')' ohidden_funres 

	'('  shift 460
	.  error


state 353
	hidden_import:  LCONST hidden_pkg_importsym '='.hidden_constant ';' 

	LLITERAL  shift 464
	LNAME  shift 10
	'-'  shift 465
	'('  shift 463
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 466
	hidden_importsym  goto 11
	hidden_constant  goto 461
	hidden_literal  goto 462

state 354
	hidden_import:  LCONST hidden_pkg_importsym hidden_type.'=' hidden_constant ';' 

	'='  shift 467
	.  error


state 355
	hidden_import:  LTYPE hidden_pkgtype hidden_type.';' 

	';'  shift 468
	.  error


state 356
	hidden_import:  LFUNC hidden_fndcl fnbody.';' 

	';'  shift 469
	.  error


state 357
	hidden_fndcl:  hidden_pkg_importsym '('.ohidden_funarg_list ')' ohidden_funres 
	ohidden_funarg_list: .    (298)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 298 (src line 1928)

	sym  goto 360
	hidden_importsym  goto 11
	hidden_funarg  goto 359
	hidden_funarg_list  goto 471
	ohidden_funarg_list  goto 470

state 358
	hidden_fndcl:  '(' hidden_funarg_list.')' sym '(' ohidden_funarg_list ')' ohidden_funres 
	hidden_funarg_list:  hidden_funarg_list.',' hidden_funarg 

	')'  shift 472
	','  shift 473
	.  error


state 359
	hidden_funarg_list:  hidden_funarg.    (348)

	.  reduce 348 (src line 2223)


state 360
	hidden_funarg:  sym.hidden_type oliteral 
	hidden_funarg:  sym.LDDD hidden_type oliteral 

	LCHAN  shift 350
	LDDD  shift 475
	LFUNC  shift 352
	LINTERFACE  shift 348
	LMAP  shift 346
	LNAME  shift 344
	LSTRUCT  shift 347
	LCOMM  shift 351
	'*'  shift 349
	'['  shift 345
	'@'  shift 13
	.  error

	hidden_importsym  goto 343
	hidden_type  goto 474
	hidden_type_misc  goto 340
	hidden_type_func  goto 342
	hidden_type_recv_chan  goto 341

state 361
	common_dcl:  LVAR '(' vardcl_list osemi.')' 

	')'  shift 476
	.  error


state 362
	vardcl_list:  vardcl_list ';'.vardcl 
	osemi:  ';'.    (289)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 289 (src line 1905)

	sym  goto 106
	dcl_name  goto 105
	dcl_name_list  goto 104
	vardcl  goto 477
	hidden_importsym  goto 11

state 363
	vardcl:  dcl_name_list ntype '='.expr_list 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 130
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	expr_list  goto 478
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 364
	vardcl:  dcl_name_list '=' expr_list.    (41)
	expr_list:  expr_list.',' expr 

	','  shift 157
	.  reduce 41 (src line 372)


state 365
	dcl_name_list:  dcl_name_list ',' dcl_name.    (277)

	.  reduce 277 (src line 1846)


state 366
	ntype:  '(' ntype.')' 

	')'  shift 479
	.  error


state 367
	recvchantype:  LCOMM LCHAN.ntype 

	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 410
	dotname  goto 232
	name  goto 199
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 368
	common_dcl:  lconst '(' constdcl osemi.')' 

	')'  shift 480
	.  error


state 369
	common_dcl:  lconst '(' constdcl ';'.constdcl_list osemi ')' 
	osemi:  ';'.    (289)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 289 (src line 1905)

	sym  goto 106
	dcl_name  goto 105
	dcl_name_list  goto 484
	constdcl  goto 483
	constdcl1  goto 482
	constdcl_list  goto 481
	hidden_importsym  goto 11

state 370
	constdcl:  dcl_name_list ntype '='.expr_list 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 130
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	expr_list  goto 485
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 371
	constdcl:  dcl_name_list '=' expr_list.    (43)
	expr_list:  expr_list.',' expr 

	','  shift 157
	.  reduce 43 (src line 382)


state 372
	common_dcl:  LTYPE '(' typedcl_list osemi.')' 

	')'  shift 486
	.  error


state 373
	typedcl_list:  typedcl_list ';'.typedcl 
	osemi:  ';'.    (289)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 289 (src line 1905)

	sym  goto 113
	typedclname  goto 112
	typedcl  goto 487
	hidden_importsym  goto 11

state 374
	fnbody:  '{' stmt_list.'}' 
	stmt_list:  stmt_list.';' stmt 

	';'  shift 420
	'}'  shift 488
	.  error


state 375
	fndcl:  '(' oarg_type_list_ocomma ')'.sym '(' oarg_type_list_ocomma ')' fnres 
	fntype:  LFUNC '(' oarg_type_list_ocomma ')'.fnres 
	fnres: .    (214)

	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 492
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 214 (src line 1480)

	sym  goto 489
	dotname  goto 497
	name  goto 199
	fnres  goto 490
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 496
	recvchantype  goto 493
	othertype  goto 495
	fnret_type  goto 491
	fntype  goto 494
	hidden_importsym  goto 11

state 376
	arg_type_list:  arg_type_list ','.arg_type 
	ocomma:  ','.    (291)

	LCHAN  shift 79
	LDDD  shift 252
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 291 (src line 1908)

	sym  goto 249
	ntype  goto 251
	arg_type  goto 498
	dotname  goto 232
	name  goto 199
	name_or_type  goto 248
	dotdotdot  goto 250
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 377
	oarg_type_list_ocomma:  arg_type_list ocomma.    (252)

	.  reduce 252 (src line 1722)


state 378
	arg_type:  sym name_or_type.    (246)

	.  reduce 246 (src line 1694)


state 379
	arg_type:  sym dotdotdot.    (247)

	.  reduce 247 (src line 1700)


state 380
	dotdotdot:  LDDD ntype.    (167)

	.  reduce 167 (src line 1196)


state 381
	fndcl:  sym '(' oarg_type_list_ocomma.')' fnres 

	')'  shift 499
	.  error


state 382
	non_dcl_stmt:  labelname ':' $$263 stmt.    (264)

	.  reduce 264 (src line 1756)


state 383
	fntype:  LFUNC '(' oarg_type_list_ocomma.')' fnres 

	')'  shift 500
	.  error


state 384
	ternaryexpr:  expr LTHEN expr LELSE.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 501
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 385
	for_body:  for_header loop_body.    (73)

	.  reduce 73 (src line 655)


state 386
	loop_body:  LBODY.$$65 stmt_list '}' 
	$$65: .    (65)

	.  reduce 65 (src line 602)

	$$65  goto 502

state 387
	for_header:  osimple_stmt ';'.osimple_stmt ';' osimple_stmt 
	osimple_stmt: .    (296)

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 296 (src line 1922)

	sym  goto 124
	expr  goto 48
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	osimple_stmt  goto 503
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	simple_stmt  goto 285
	uexpr  goto 56
	expr_list  goto 49
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 388
	simple_stmt:  expr_list '='.expr_list 
	range_stmt:  expr_list '='.LRANGE expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LRANGE  shift 504
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 130
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	expr_list  goto 278
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 389
	simple_stmt:  expr_list LCOLAS.expr_list 
	range_stmt:  expr_list LCOLAS.LRANGE expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LRANGE  shift 505
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 130
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	expr_list  goto 279
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 390
	range_stmt:  LRANGE expr.    (69)
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	LTHEN  shift 154
	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 69 (src line 627)


state 391
	switch_stmt:  LSWITCH $$88 if_header $$89.LBODY caseblock_list '}' 

	LBODY  shift 506
	.  error


state 392
	if_header:  osimple_stmt ';'.osimple_stmt 
	osimple_stmt: .    (296)

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 296 (src line 1922)

	sym  goto 124
	expr  goto 48
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	osimple_stmt  goto 507
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	simple_stmt  goto 285
	uexpr  goto 56
	expr_list  goto 49
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 393
	caseblock_list:  caseblock_list.caseblock 
	select_stmt:  LSELECT $$91 LBODY caseblock_list.'}' 

	LCASE  shift 511
	LDEFAULT  shift 512
	'}'  shift 509
	.  error

	case  goto 510
	caseblock  goto 508

state 394
	if_stmt:  LIF $$78 if_header $$79.loop_body $$80 elseif_list else 

	LBODY  shift 386
	.  error

	loop_body  goto 513

state 395
	pseudocall:  pexpr '(' expr_or_type_list ocomma.')' 

	')'  shift 514
	.  error


state 396
	pseudocall:  pexpr '(' expr_or_type_list LDDD.ocomma ')' 
	ocomma: .    (290)

	','  shift 417
	.  reduce 290 (src line 1907)

	ocomma  goto 515

state 397
	expr_or_type_list:  expr_or_type_list ','.expr_or_type 
	ocomma:  ','.    (291)

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 181
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 180
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 291 (src line 1908)

	sym  goto 124
	expr  goto 175
	ternaryexpr  goto 55
	expr_or_type  goto 516
	fnliteral  goto 74
	name  goto 70
	non_expr_type  goto 176
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	recvchantype  goto 177
	othertype  goto 179
	fntype  goto 178
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 398
	pexpr_no_paren:  pexpr '.' '(' expr_or_type.')' 

	')'  shift 517
	.  error


state 399
	pexpr_no_paren:  pexpr '.' '(' LTYPE.')' 

	')'  shift 518
	.  error


state 400
	pexpr_no_paren:  pexpr '[' expr ']'.    (133)

	.  reduce 133 (src line 977)


state 401
	pexpr_no_paren:  pexpr '[' oexpr ':'.oexpr ']' 
	pexpr_no_paren:  pexpr '[' oexpr ':'.oexpr ':' oexpr ']' 
	oexpr: .    (292)

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 292 (src line 1910)

	sym  goto 124
	expr  goto 190
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	oexpr  goto 519
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 402
	pexpr_no_paren:  pexpr_no_paren '{' start_complit braced_keyval_list.'}' 

	'}'  shift 520
	.  error


state 403
	keyval_list:  keyval_list.',' keyval 
	keyval_list:  keyval_list.',' bare_complitexpr 
	braced_keyval_list:  keyval_list.ocomma 
	ocomma: .    (290)

	','  shift 521
	.  reduce 290 (src line 1907)

	ocomma  goto 522

state 404
	keyval_list:  keyval.    (282)

	.  reduce 282 (src line 1874)


state 405
	keyval_list:  bare_complitexpr.    (283)

	.  reduce 283 (src line 1879)


state 406
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 
	keyval:  expr.':' complitexpr 
	bare_complitexpr:  expr.    (144)

	LTHEN  shift 154
	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	':'  shift 523
	.  reduce 144 (src line 1037)


state 407
	bare_complitexpr:  '{'.start_complit braced_keyval_list '}' 
	start_complit: .    (142)

	.  reduce 142 (src line 1024)

	start_complit  goto 524

state 408
	pexpr_no_paren:  '(' expr_or_type ')' '{'.start_complit braced_keyval_list '}' 
	start_complit: .    (142)

	.  reduce 142 (src line 1024)

	start_complit  goto 525

state 409
	othertype:  LCHAN LCOMM.ntype 
	recvchantype:  LCOMM.LCHAN ntype 

	LCHAN  shift 302
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 314
	dotname  goto 232
	name  goto 199
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 410
	recvchantype:  LCOMM LCHAN ntype.    (201)

	.  reduce 201 (src line 1292)


state 411
	ntype:  fntype.    (169)
	non_recvchantype:  fntype.    (178)

	LBODY  reduce 178 (src line 1221)
	'('  reduce 178 (src line 1221)
	'{'  reduce 178 (src line 1221)
	.  reduce 169 (src line 1203)


state 412
	ntype:  othertype.    (170)
	non_recvchantype:  othertype.    (179)

	LBODY  reduce 179 (src line 1223)
	'('  reduce 179 (src line 1223)
	'{'  reduce 179 (src line 1223)
	.  reduce 170 (src line 1204)


state 413
	ntype:  ptrtype.    (171)
	non_recvchantype:  ptrtype.    (180)

	LBODY  reduce 180 (src line 1224)
	'('  reduce 180 (src line 1224)
	'{'  reduce 180 (src line 1224)
	.  reduce 171 (src line 1205)


state 414
	ntype:  dotname.    (172)
	non_recvchantype:  dotname.    (181)

	LBODY  reduce 181 (src line 1225)
	'('  reduce 181 (src line 1225)
	'{'  reduce 181 (src line 1225)
	.  reduce 172 (src line 1206)


state 415
	ntype:  '('.ntype ')' 
	non_recvchantype:  '('.ntype ')' 

	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 526
	dotname  goto 232
	name  goto 199
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 416
	pexpr_no_paren:  convtype '(' expr ocomma.')' 

	')'  shift 527
	.  error


state 417
	ocomma:  ','.    (291)

	.  reduce 291 (src line 1908)


state 418
	pexpr_no_paren:  comptype lbrace start_complit braced_keyval_list.'}' 

	'}'  shift 528
	.  error


state 419
	fnliteral:  fnlitdcl lbrace stmt_list '}'.    (218)

	.  reduce 218 (src line 1501)


state 420
	stmt_list:  stmt_list ';'.stmt 
	stmt: .    (253)

	error  shift 310
	LLITERAL  shift 69
	LBREAK  shift 41
	LCASE  reduce 253 (src line 1730)
	LCHAN  shift 79
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFAULT  reduce 253 (src line 1730)
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 125
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 83
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	';'  reduce 253 (src line 1730)
	'{'  shift 311
	'}'  reduce 253 (src line 1730)
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 57
	stmt  goto 529
	compound_stmt  goto 307
	expr  goto 48
	ternaryexpr  goto 55
	fnliteral  goto 74
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 309
	labelname  goto 39
	name  goto 70
	new_name  goto 54
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 56
	expr_list  goto 49
	common_dcl  goto 308
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 77

state 421
	compound_stmt:  '{' $$59.stmt_list '}' 
	stmt: .    (253)

	error  shift 310
	LLITERAL  shift 69
	LBREAK  shift 41
	LCHAN  shift 79
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 125
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 83
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	';'  reduce 253 (src line 1730)
	'{'  shift 311
	'}'  reduce 253 (src line 1730)
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 57
	stmt  goto 306
	compound_stmt  goto 307
	expr  goto 48
	ternaryexpr  goto 55
	fnliteral  goto 74
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 309
	labelname  goto 39
	name  goto 70
	new_name  goto 54
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 56
	expr_list  goto 49
	stmt_list  goto 530
	common_dcl  goto 308
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 77

state 422
	othertype:  '[' oexpr ']' ntype.    (193)

	.  reduce 193 (src line 1259)


state 423
	othertype:  '[' LDDD ']' ntype.    (194)

	.  reduce 194 (src line 1264)


state 424
	non_recvchantype:  '(' ntype ')'.    (182)

	.  reduce 182 (src line 1226)


state 425
	dotname:  name '.' sym.    (192)

	.  reduce 192 (src line 1247)


state 426
	othertype:  LMAP '[' ntype ']'.ntype 

	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	ntype  goto 531
	dotname  goto 232
	name  goto 199
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 427
	structtype:  LSTRUCT lbrace structdcl_list osemi.'}' 

	'}'  shift 532
	.  error


state 428
	structdcl_list:  structdcl_list ';'.structdcl 
	osemi:  ';'.    (289)

	LNAME  shift 328
	'*'  shift 325
	'('  shift 324
	'?'  shift 12
	'@'  shift 13
	.  reduce 289 (src line 1905)

	sym  goto 120
	packname  goto 327
	embed  goto 323
	new_name  goto 326
	new_name_list  goto 322
	structdcl  goto 533
	hidden_importsym  goto 11

state 429
	structdcl:  new_name_list ntype.oliteral 
	oliteral: .    (304)

	LLITERAL  shift 432
	.  reduce 304 (src line 1946)

	oliteral  goto 534

state 430
	new_name_list:  new_name_list ','.new_name 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 120
	new_name  goto 535
	hidden_importsym  goto 11

state 431
	structdcl:  embed oliteral.    (233)

	.  reduce 233 (src line 1600)


state 432
	oliteral:  LLITERAL.    (305)

	.  reduce 305 (src line 1950)


state 433
	structdcl:  '(' embed.')' oliteral 

	')'  shift 536
	.  error


state 434
	structdcl:  '(' '*'.embed ')' oliteral 

	LNAME  shift 435
	.  error

	packname  goto 327
	embed  goto 537

state 435
	packname:  LNAME.    (238)
	packname:  LNAME.'.' sym 

	'.'  shift 438
	.  reduce 238 (src line 1632)


state 436
	structdcl:  '*' embed.oliteral 
	oliteral: .    (304)

	LLITERAL  shift 432
	.  reduce 304 (src line 1946)

	oliteral  goto 538

state 437
	structdcl:  '*' '('.embed ')' oliteral 

	LNAME  shift 435
	.  error

	packname  goto 327
	embed  goto 539

state 438
	packname:  LNAME '.'.sym 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 540
	hidden_importsym  goto 11

state 439
	interfacetype:  LINTERFACE lbrace interfacedcl_list osemi.'}' 

	'}'  shift 541
	.  error


state 440
	interfacedcl_list:  interfacedcl_list ';'.interfacedcl 
	osemi:  ';'.    (289)

	LNAME  shift 328
	'('  shift 334
	'?'  shift 12
	'@'  shift 13
	.  reduce 289 (src line 1905)

	sym  goto 120
	packname  goto 333
	interfacedcl  goto 542
	new_name  goto 332
	hidden_importsym  goto 11

state 441
	interfacedcl:  new_name indcl.    (241)

	.  reduce 241 (src line 1663)


state 442
	indcl:  '('.oarg_type_list_ocomma ')' fnres 
	oarg_type_list_ocomma: .    (251)

	LCHAN  shift 79
	LDDD  shift 252
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 251 (src line 1718)

	sym  goto 249
	ntype  goto 251
	arg_type  goto 247
	dotname  goto 232
	name  goto 199
	name_or_type  goto 248
	oarg_type_list_ocomma  goto 543
	arg_type_list  goto 246
	dotdotdot  goto 250
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 443
	interfacedcl:  '(' packname.')' 

	')'  shift 544
	.  error


state 444
	import:  LIMPORT '(' import_stmt_list osemi ')'.    (9)

	.  reduce 9 (src line 173)


state 445
	import_stmt_list:  import_stmt_list ';' import_stmt.    (14)

	.  reduce 14 (src line 225)


state 446
	hidden_import:  LIMPORT LNAME LLITERAL ';'.    (306)

	.  reduce 306 (src line 1955)


state 447
	hidden_import:  LVAR hidden_pkg_importsym hidden_type ';'.    (307)

	.  reduce 307 (src line 1960)


state 448
	hidden_type_misc:  '[' ']'.hidden_type 

	LCHAN  shift 350
	LFUNC  shift 352
	LINTERFACE  shift 348
	LMAP  shift 346
	LNAME  shift 344
	LSTRUCT  shift 347
	LCOMM  shift 351
	'*'  shift 349
	'['  shift 345
	'@'  shift 13
	.  error

	hidden_importsym  goto 343
	hidden_type  goto 545
	hidden_type_misc  goto 340
	hidden_type_func  goto 342
	hidden_type_recv_chan  goto 341

state 449
	hidden_type_misc:  '[' LLITERAL.']' hidden_type 

	']'  shift 546
	.  error


state 450
	hidden_type_misc:  LMAP '['.hidden_type ']' hidden_type 

	LCHAN  shift 350
	LFUNC  shift 352
	LINTERFACE  shift 348
	LMAP  shift 346
	LNAME  shift 344
	LSTRUCT  shift 347
	LCOMM  shift 351
	'*'  shift 349
	'['  shift 345
	'@'  shift 13
	.  error

	hidden_importsym  goto 343
	hidden_type  goto 547
	hidden_type_misc  goto 340
	hidden_type_func  goto 342
	hidden_type_recv_chan  goto 341

state 451
	hidden_type_misc:  LSTRUCT '{'.ohidden_structdcl_list '}' 
	ohidden_structdcl_list: .    (300)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 300 (src line 1934)

	sym  goto 551
	hidden_importsym  goto 11
	hidden_structdcl  goto 550
	hidden_structdcl_list  goto 549
	ohidden_structdcl_list  goto 548

state 452
	hidden_type_misc:  LINTERFACE '{'.ohidden_interfacedcl_list '}' 
	ohidden_interfacedcl_list: .    (302)

	LCHAN  shift 350
	LFUNC  shift 352
	LINTERFACE  shift 348
	LMAP  shift 346
	LNAME  shift 557
	LSTRUCT  shift 347
	LCOMM  shift 351
	'*'  shift 349
	'['  shift 345
	'?'  shift 12
	'@'  shift 13
	.  reduce 302 (src line 1940)

	sym  goto 555
	hidden_importsym  goto 558
	hidden_interfacedcl  goto 554
	hidden_interfacedcl_list  goto 553
	ohidden_interfacedcl_list  goto 552
	hidden_type  goto 556
	hidden_type_misc  goto 340
	hidden_type_func  goto 342
	hidden_type_recv_chan  goto 341

state 453
	hidden_type_misc:  '*' hidden_type.    (326)

	.  reduce 326 (src line 2059)


state 454
	hidden_type_misc:  LCHAN hidden_type_non_recv_chan.    (327)

	.  reduce 327 (src line 2063)


state 455
	hidden_type_misc:  LCHAN '('.hidden_type_recv_chan ')' 

	LCOMM  shift 351
	.  error

	hidden_type_recv_chan  goto 559

state 456
	hidden_type_misc:  LCHAN LCOMM.hidden_type 

	LCHAN  shift 350
	LFUNC  shift 352
	LINTERFACE  shift 348
	LMAP  shift 346
	LNAME  shift 344
	LSTRUCT  shift 347
	LCOMM  shift 351
	'*'  shift 349
	'['  shift 345
	'@'  shift 13
	.  error

	hidden_importsym  goto 343
	hidden_type  goto 560
	hidden_type_misc  goto 340
	hidden_type_func  goto 342
	hidden_type_recv_chan  goto 341

state 457
	hidden_type_non_recv_chan:  hidden_type_misc.    (317)

	.  reduce 317 (src line 2019)


state 458
	hidden_type_non_recv_chan:  hidden_type_func.    (318)

	.  reduce 318 (src line 2021)


state 459
	hidden_type_recv_chan:  LCOMM LCHAN.hidden_type 

	LCHAN  shift 350
	LFUNC  shift 352
	LINTERFACE  shift 348
	LMAP  shift 346
	LNAME  shift 344
	LSTRUCT  shift 347
	LCOMM  shift 351
	'*'  shift 349
	'['  shift 345
	'@'  shift 13
	.  error

	hidden_importsym  goto 343
	hidden_type  goto 561
	hidden_type_misc  goto 340
	hidden_type_func  goto 342
	hidden_type_recv_chan  goto 341

state 460
	hidden_type_func:  LFUNC '('.ohidden_funarg_list ')' ohidden_funres 
	ohidden_funarg_list: .    (298)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 298 (src line 1928)

	sym  goto 360
	hidden_importsym  goto 11
	hidden_funarg  goto 359
	hidden_funarg_list  goto 471
	ohidden_funarg_list  goto 562

state 461
	hidden_import:  LCONST hidden_pkg_importsym '=' hidden_constant.';' 

	';'  shift 563
	.  error


state 462
	hidden_constant:  hidden_literal.    (344)

	.  reduce 344 (src line 2206)


state 463
	hidden_constant:  '('.hidden_literal '+' hidden_literal ')' 

	LLITERAL  shift 464
	LNAME  shift 10
	'-'  shift 465
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 466
	hidden_importsym  goto 11
	hidden_literal  goto 564

state 464
	hidden_literal:  LLITERAL.    (341)

	.  reduce 341 (src line 2175)


state 465
	hidden_literal:  '-'.LLITERAL 

	LLITERAL  shift 565
	.  error


state 466
	hidden_literal:  sym.    (343)

	.  reduce 343 (src line 2198)


state 467
	hidden_import:  LCONST hidden_pkg_importsym hidden_type '='.hidden_constant ';' 

	LLITERAL  shift 464
	LNAME  shift 10
	'-'  shift 465
	'('  shift 463
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 466
	hidden_importsym  goto 11
	hidden_constant  goto 566
	hidden_literal  goto 462

state 468
	hidden_import:  LTYPE hidden_pkgtype hidden_type ';'.    (310)

	.  reduce 310 (src line 1972)


state 469
	hidden_import:  LFUNC hidden_fndcl fnbody ';'.    (311)

	.  reduce 311 (src line 1976)


state 470
	hidden_fndcl:  hidden_pkg_importsym '(' ohidden_funarg_list.')' ohidden_funres 

	')'  shift 567
	.  error


state 471
	ohidden_funarg_list:  hidden_funarg_list.    (299)
	hidden_funarg_list:  hidden_funarg_list.',' hidden_funarg 

	','  shift 473
	.  reduce 299 (src line 1932)


state 472
	hidden_fndcl:  '(' hidden_funarg_list ')'.sym '(' ohidden_funarg_list ')' ohidden_funres 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 568
	hidden_importsym  goto 11

state 473
	hidden_funarg_list:  hidden_funarg_list ','.hidden_funarg 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 360
	hidden_importsym  goto 11
	hidden_funarg  goto 569

state 474
	hidden_funarg:  sym hidden_type.oliteral 
	oliteral: .    (304)

	LLITERAL  shift 432
	.  reduce 304 (src line 1946)

	oliteral  goto 570

state 475
	hidden_funarg:  sym LDDD.hidden_type oliteral 

	LCHAN  shift 350
	LFUNC  shift 352
	LINTERFACE  shift 348
	LMAP  shift 346
	LNAME  shift 344
	LSTRUCT  shift 347
	LCOMM  shift 351
	'*'  shift 349
	'['  shift 345
	'@'  shift 13
	.  error

	hidden_importsym  goto 343
	hidden_type  goto 571
	hidden_type_misc  goto 340
	hidden_type_func  goto 342
	hidden_type_recv_chan  goto 341

state 476
	common_dcl:  LVAR '(' vardcl_list osemi ')'.    (29)

	.  reduce 29 (src line 313)


state 477
	vardcl_list:  vardcl_list ';' vardcl.    (223)

	.  reduce 223 (src line 1536)


state 478
	vardcl:  dcl_name_list ntype '=' expr_list.    (40)
	expr_list:  expr_list.',' expr 

	','  shift 157
	.  reduce 40 (src line 368)


state 479
	ntype:  '(' ntype ')'.    (173)

	.  reduce 173 (src line 1207)


state 480
	common_dcl:  lconst '(' constdcl osemi ')'.    (32)

	.  reduce 32 (src line 327)


state 481
	common_dcl:  lconst '(' constdcl ';' constdcl_list.osemi ')' 
	constdcl_list:  constdcl_list.';' constdcl1 
	osemi: .    (288)

	';'  shift 573
	.  reduce 288 (src line 1904)

	osemi  goto 572

state 482
	constdcl_list:  constdcl1.    (224)

	.  reduce 224 (src line 1541)


state 483
	constdcl1:  constdcl.    (44)

	.  reduce 44 (src line 387)


state 484
	constdcl:  dcl_name_list.ntype '=' expr_list 
	constdcl:  dcl_name_list.'=' expr_list 
	constdcl1:  dcl_name_list.ntype 
	constdcl1:  dcl_name_list.    (46)
	dcl_name_list:  dcl_name_list.',' dcl_name 

	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'='  shift 238
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	','  shift 227
	.  reduce 46 (src line 393)

	sym  goto 124
	ntype  goto 574
	dotname  goto 232
	name  goto 199
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 485
	constdcl:  dcl_name_list ntype '=' expr_list.    (42)
	expr_list:  expr_list.',' expr 

	','  shift 157
	.  reduce 42 (src line 377)


state 486
	common_dcl:  LTYPE '(' typedcl_list osemi ')'.    (36)

	.  reduce 36 (src line 348)


state 487
	typedcl_list:  typedcl_list ';' typedcl.    (227)

	.  reduce 227 (src line 1553)


state 488
	fnbody:  '{' stmt_list '}'.    (213)

	.  reduce 213 (src line 1472)


state 489
	name:  sym.    (164)
	fndcl:  '(' oarg_type_list_ocomma ')' sym.'(' oarg_type_list_ocomma ')' fnres 

	'('  shift 575
	.  reduce 164 (src line 1169)


state 490
	fntype:  LFUNC '(' oarg_type_list_ocomma ')' fnres.    (211)

	.  reduce 211 (src line 1459)


state 491
	fnres:  fnret_type.    (215)

	.  reduce 215 (src line 1485)


state 492
	fnres:  '('.oarg_type_list_ocomma ')' 
	oarg_type_list_ocomma: .    (251)

	LCHAN  shift 79
	LDDD  shift 252
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 251 (src line 1718)

	sym  goto 249
	ntype  goto 251
	arg_type  goto 247
	dotname  goto 232
	name  goto 199
	name_or_type  goto 248
	oarg_type_list_ocomma  goto 576
	arg_type_list  goto 246
	dotdotdot  goto 250
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 493
	fnret_type:  recvchantype.    (186)

	.  reduce 186 (src line 1238)


state 494
	fnret_type:  fntype.    (187)

	.  reduce 187 (src line 1240)


state 495
	fnret_type:  othertype.    (188)

	.  reduce 188 (src line 1241)


state 496
	fnret_type:  ptrtype.    (189)

	.  reduce 189 (src line 1242)


state 497
	fnret_type:  dotname.    (190)

	.  reduce 190 (src line 1243)


state 498
	arg_type_list:  arg_type_list ',' arg_type.    (250)

	.  reduce 250 (src line 1713)


state 499
	fndcl:  sym '(' oarg_type_list_ocomma ')'.fnres 
	fnres: .    (214)

	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 492
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 214 (src line 1480)

	sym  goto 124
	dotname  goto 497
	name  goto 199
	fnres  goto 577
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 496
	recvchantype  goto 493
	othertype  goto 495
	fnret_type  goto 491
	fntype  goto 494
	hidden_importsym  goto 11

state 500
	fntype:  LFUNC '(' oarg_type_list_ocomma ')'.fnres 
	fnres: .    (214)

	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 492
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 214 (src line 1480)

	sym  goto 124
	dotname  goto 497
	name  goto 199
	fnres  goto 490
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 496
	recvchantype  goto 493
	othertype  goto 495
	fnret_type  goto 491
	fntype  goto 494
	hidden_importsym  goto 11

state 501
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 
	ternaryexpr:  expr LTHEN expr LELSE expr.    (115)

	LANDAND  shift 135
	LANDNOT  shift 150
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 115 (src line 881)


state 502
	loop_body:  LBODY $$65.stmt_list '}' 
	stmt: .    (253)

	error  shift 310
	LLITERAL  shift 69
	LBREAK  shift 41
	LCHAN  shift 79
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 125
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 83
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	';'  reduce 253 (src line 1730)
	'{'  shift 311
	'}'  reduce 253 (src line 1730)
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 57
	stmt  goto 306
	compound_stmt  goto 307
	expr  goto 48
	ternaryexpr  goto 55
	fnliteral  goto 74
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 309
	labelname  goto 39
	name  goto 70
	new_name  goto 54
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 56
	expr_list  goto 49
	stmt_list  goto 578
	common_dcl  goto 308
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 77

state 503
	for_header:  osimple_stmt ';' osimple_stmt.';' osimple_stmt 

	';'  shift 579
	.  error


state 504
	range_stmt:  expr_list '=' LRANGE.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 580
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 505
	range_stmt:  expr_list LCOLAS LRANGE.expr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 581
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 506
	switch_stmt:  LSWITCH $$88 if_header $$89 LBODY.caseblock_list '}' 
	caseblock_list: .    (63)

	.  reduce 63 (src line 593)

	caseblock_list  goto 582

state 507
	if_header:  osimple_stmt ';' osimple_stmt.    (77)

	.  reduce 77 (src line 680)


state 508
	caseblock_list:  caseblock_list caseblock.    (64)

	.  reduce 64 (src line 597)


state 509
	select_stmt:  LSELECT $$91 LBODY caseblock_list '}'.    (92)

	.  reduce 92 (src line 785)


state 510
	caseblock:  case.$$61 stmt_list 
	$$61: .    (61)

	.  reduce 61 (src line 562)

	$$61  goto 583

state 511
	case:  LCASE.expr_or_type_list ':' 
	case:  LCASE.expr_or_type_list '=' expr ':' 
	case:  LCASE.expr_or_type_list LCOLAS expr ':' 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 181
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 180
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 175
	ternaryexpr  goto 55
	expr_or_type  goto 294
	fnliteral  goto 74
	name  goto 70
	non_expr_type  goto 176
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	expr_or_type_list  goto 584
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	recvchantype  goto 177
	othertype  goto 179
	fntype  goto 178
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 512
	case:  LDEFAULT.':' 

	':'  shift 585
	.  error


state 513
	if_stmt:  LIF $$78 if_header $$79 loop_body.$$80 elseif_list else 
	$$80: .    (80)

	.  reduce 80 (src line 702)

	$$80  goto 586

state 514
	pseudocall:  pexpr '(' expr_or_type_list ocomma ')'.    (126)

	.  reduce 126 (src line 940)


state 515
	pseudocall:  pexpr '(' expr_or_type_list LDDD ocomma.')' 

	')'  shift 587
	.  error


state 516
	expr_or_type_list:  expr_or_type_list ',' expr_or_type.    (281)

	.  reduce 281 (src line 1866)


state 517
	pexpr_no_paren:  pexpr '.' '(' expr_or_type ')'.    (131)

	.  reduce 131 (src line 969)


state 518
	pexpr_no_paren:  pexpr '.' '(' LTYPE ')'.    (132)

	.  reduce 132 (src line 973)


state 519
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr.']' 
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr.':' oexpr ']' 

	':'  shift 589
	']'  shift 588
	.  error


state 520
	pexpr_no_paren:  pexpr_no_paren '{' start_complit braced_keyval_list '}'.    (139)

	.  reduce 139 (src line 1009)


state 521
	keyval_list:  keyval_list ','.keyval 
	keyval_list:  keyval_list ','.bare_complitexpr 
	ocomma:  ','.    (291)

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'{'  shift 407
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 291 (src line 1908)

	sym  goto 124
	expr  goto 406
	ternaryexpr  goto 55
	bare_complitexpr  goto 591
	fnliteral  goto 74
	keyval  goto 590
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 522
	braced_keyval_list:  keyval_list ocomma.    (287)

	.  reduce 287 (src line 1896)


state 523
	keyval:  expr ':'.complitexpr 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'{'  shift 594
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 593
	ternaryexpr  goto 55
	complitexpr  goto 592
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 524
	bare_complitexpr:  '{' start_complit.braced_keyval_list '}' 
	braced_keyval_list: .    (286)

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'{'  shift 407
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 286 (src line 1892)

	sym  goto 124
	expr  goto 406
	ternaryexpr  goto 55
	bare_complitexpr  goto 405
	fnliteral  goto 74
	keyval  goto 404
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	keyval_list  goto 403
	braced_keyval_list  goto 595
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 525
	pexpr_no_paren:  '(' expr_or_type ')' '{' start_complit.braced_keyval_list '}' 
	braced_keyval_list: .    (286)

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'{'  shift 407
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 286 (src line 1892)

	sym  goto 124
	expr  goto 406
	ternaryexpr  goto 55
	bare_complitexpr  goto 405
	fnliteral  goto 74
	keyval  goto 404
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	keyval_list  goto 403
	braced_keyval_list  goto 596
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 526
	ntype:  '(' ntype.')' 
	non_recvchantype:  '(' ntype.')' 

	')'  shift 597
	.  error


state 527
	pexpr_no_paren:  convtype '(' expr ocomma ')'.    (137)

	.  reduce 137 (src line 996)


state 528
	pexpr_no_paren:  comptype lbrace start_complit braced_keyval_list '}'.    (138)

	.  reduce 138 (src line 1002)


state 529
	stmt_list:  stmt_list ';' stmt.    (273)

	.  reduce 273 (src line 1823)


state 530
	compound_stmt:  '{' $$59 stmt_list.'}' 
	stmt_list:  stmt_list.';' stmt 

	';'  shift 420
	'}'  shift 598
	.  error


state 531
	othertype:  LMAP '[' ntype ']' ntype.    (197)

	.  reduce 197 (src line 1279)


state 532
	structtype:  LSTRUCT lbrace structdcl_list osemi '}'.    (202)

	.  reduce 202 (src line 1299)


state 533
	structdcl_list:  structdcl_list ';' structdcl.    (229)

	.  reduce 229 (src line 1560)


state 534
	structdcl:  new_name_list ntype oliteral.    (232)

	.  reduce 232 (src line 1575)


state 535
	new_name_list:  new_name_list ',' new_name.    (275)

	.  reduce 275 (src line 1836)


state 536
	structdcl:  '(' embed ')'.oliteral 
	oliteral: .    (304)

	LLITERAL  shift 432
	.  reduce 304 (src line 1946)

	oliteral  goto 599

state 537
	structdcl:  '(' '*' embed.')' oliteral 

	')'  shift 600
	.  error


state 538
	structdcl:  '*' embed oliteral.    (235)

	.  reduce 235 (src line 1611)


state 539
	structdcl:  '*' '(' embed.')' oliteral 

	')'  shift 601
	.  error


state 540
	packname:  LNAME '.' sym.    (239)

	.  reduce 239 (src line 1643)


state 541
	interfacetype:  LINTERFACE lbrace interfacedcl_list osemi '}'.    (204)

	.  reduce 204 (src line 1312)


state 542
	interfacedcl_list:  interfacedcl_list ';' interfacedcl.    (231)

	.  reduce 231 (src line 1570)


state 543
	indcl:  '(' oarg_type_list_ocomma.')' fnres 

	')'  shift 602
	.  error


state 544
	interfacedcl:  '(' packname ')'.    (243)

	.  reduce 243 (src line 1673)


state 545
	hidden_type_misc:  '[' ']' hidden_type.    (321)

	.  reduce 321 (src line 2039)


state 546
	hidden_type_misc:  '[' LLITERAL ']'.hidden_type 

	LCHAN  shift 350
	LFUNC  shift 352
	LINTERFACE  shift 348
	LMAP  shift 346
	LNAME  shift 344
	LSTRUCT  shift 347
	LCOMM  shift 351
	'*'  shift 349
	'['  shift 345
	'@'  shift 13
	.  error

	hidden_importsym  goto 343
	hidden_type  goto 603
	hidden_type_misc  goto 340
	hidden_type_func  goto 342
	hidden_type_recv_chan  goto 341

state 547
	hidden_type_misc:  LMAP '[' hidden_type.']' hidden_type 

	']'  shift 604
	.  error


state 548
	hidden_type_misc:  LSTRUCT '{' ohidden_structdcl_list.'}' 

	'}'  shift 605
	.  error


state 549
	ohidden_structdcl_list:  hidden_structdcl_list.    (301)
	hidden_structdcl_list:  hidden_structdcl_list.';' hidden_structdcl 

	';'  shift 606
	.  reduce 301 (src line 1938)


state 550
	hidden_structdcl_list:  hidden_structdcl.    (350)

	.  reduce 350 (src line 2233)


state 551
	hidden_structdcl:  sym.hidden_type oliteral 

	LCHAN  shift 350
	LFUNC  shift 352
	LINTERFACE  shift 348
	LMAP  shift 346
	LNAME  shift 344
	LSTRUCT  shift 347
	LCOMM  shift 351
	'*'  shift 349
	'['  shift 345
	'@'  shift 13
	.  error

	hidden_importsym  goto 343
	hidden_type  goto 607
	hidden_type_misc  goto 340
	hidden_type_func  goto 342
	hidden_type_recv_chan  goto 341

state 552
	hidden_type_misc:  LINTERFACE '{' ohidden_interfacedcl_list.'}' 

	'}'  shift 608
	.  error


state 553
	ohidden_interfacedcl_list:  hidden_interfacedcl_list.    (303)
	hidden_interfacedcl_list:  hidden_interfacedcl_list.';' hidden_interfacedcl 

	';'  shift 609
	.  reduce 303 (src line 1944)


state 554
	hidden_interfacedcl_list:  hidden_interfacedcl.    (352)

	.  reduce 352 (src line 2243)


state 555
	hidden_interfacedcl:  sym.'(' ohidden_funarg_list ')' ohidden_funres 

	'('  shift 610
	.  error


state 556
	hidden_interfacedcl:  hidden_type.    (336)

	.  reduce 336 (src line 2150)


state 557
	sym:  LNAME.    (159)
	hidden_type_misc:  LNAME.    (320)

	'('  reduce 159 (src line 1124)
	.  reduce 320 (src line 2028)


state 558
	sym:  hidden_importsym.    (160)
	hidden_type_misc:  hidden_importsym.    (319)

	'('  reduce 160 (src line 1133)
	.  reduce 319 (src line 2023)


state 559
	hidden_type_misc:  LCHAN '(' hidden_type_recv_chan.')' 

	')'  shift 611
	.  error


state 560
	hidden_type_misc:  LCHAN LCOMM hidden_type.    (329)

	.  reduce 329 (src line 2075)


state 561
	hidden_type_recv_chan:  LCOMM LCHAN hidden_type.    (330)

	.  reduce 330 (src line 2082)


state 562
	hidden_type_func:  LFUNC '(' ohidden_funarg_list.')' ohidden_funres 

	')'  shift 612
	.  error


state 563
	hidden_import:  LCONST hidden_pkg_importsym '=' hidden_constant ';'.    (308)

	.  reduce 308 (src line 1964)


state 564
	hidden_constant:  '(' hidden_literal.'+' hidden_literal ')' 

	'+'  shift 613
	.  error


state 565
	hidden_literal:  '-' LLITERAL.    (342)

	.  reduce 342 (src line 2180)


state 566
	hidden_import:  LCONST hidden_pkg_importsym hidden_type '=' hidden_constant.';' 

	';'  shift 614
	.  error


state 567
	hidden_fndcl:  hidden_pkg_importsym '(' ohidden_funarg_list ')'.ohidden_funres 
	ohidden_funres: .    (337)

	LCHAN  shift 350
	LFUNC  shift 352
	LINTERFACE  shift 348
	LMAP  shift 346
	LNAME  shift 344
	LSTRUCT  shift 347
	LCOMM  shift 351
	'*'  shift 349
	'('  shift 617
	'['  shift 345
	'@'  shift 13
	.  reduce 337 (src line 2155)

	hidden_importsym  goto 343
	hidden_funres  goto 616
	ohidden_funres  goto 615
	hidden_type  goto 618
	hidden_type_misc  goto 340
	hidden_type_func  goto 342
	hidden_type_recv_chan  goto 341

state 568
	hidden_fndcl:  '(' hidden_funarg_list ')' sym.'(' ohidden_funarg_list ')' ohidden_funres 

	'('  shift 619
	.  error


state 569
	hidden_funarg_list:  hidden_funarg_list ',' hidden_funarg.    (349)

	.  reduce 349 (src line 2228)


state 570
	hidden_funarg:  sym hidden_type oliteral.    (332)

	.  reduce 332 (src line 2096)


state 571
	hidden_funarg:  sym LDDD hidden_type.oliteral 
	oliteral: .    (304)

	LLITERAL  shift 432
	.  reduce 304 (src line 1946)

	oliteral  goto 620

state 572
	common_dcl:  lconst '(' constdcl ';' constdcl_list osemi.')' 

	')'  shift 621
	.  error


state 573
	constdcl_list:  constdcl_list ';'.constdcl1 
	osemi:  ';'.    (289)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 289 (src line 1905)

	sym  goto 106
	dcl_name  goto 105
	dcl_name_list  goto 484
	constdcl  goto 483
	constdcl1  goto 622
	hidden_importsym  goto 11

state 574
	constdcl:  dcl_name_list ntype.'=' expr_list 
	constdcl1:  dcl_name_list ntype.    (45)

	'='  shift 370
	.  reduce 45 (src line 389)


state 575
	fndcl:  '(' oarg_type_list_ocomma ')' sym '('.oarg_type_list_ocomma ')' fnres 
	oarg_type_list_ocomma: .    (251)

	LCHAN  shift 79
	LDDD  shift 252
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 233
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 251 (src line 1718)

	sym  goto 249
	ntype  goto 251
	arg_type  goto 247
	dotname  goto 232
	name  goto 199
	name_or_type  goto 248
	oarg_type_list_ocomma  goto 623
	arg_type_list  goto 246
	dotdotdot  goto 250
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 231
	recvchantype  goto 228
	othertype  goto 230
	fntype  goto 229
	hidden_importsym  goto 11

state 576
	fnres:  '(' oarg_type_list_ocomma.')' 

	')'  shift 624
	.  error


state 577
	fndcl:  sym '(' oarg_type_list_ocomma ')' fnres.    (207)

	.  reduce 207 (src line 1347)


state 578
	loop_body:  LBODY $$65 stmt_list.'}' 
	stmt_list:  stmt_list.';' stmt 

	';'  shift 420
	'}'  shift 625
	.  error


state 579
	for_header:  osimple_stmt ';' osimple_stmt ';'.osimple_stmt 
	osimple_stmt: .    (296)

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 296 (src line 1922)

	sym  goto 124
	expr  goto 48
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	osimple_stmt  goto 626
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	simple_stmt  goto 285
	uexpr  goto 56
	expr_list  goto 49
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 580
	range_stmt:  expr_list '=' LRANGE expr.    (67)
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	LTHEN  shift 154
	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 67 (src line 613)


state 581
	range_stmt:  expr_list LCOLAS LRANGE expr.    (68)
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	LTHEN  shift 154
	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 68 (src line 620)


state 582
	caseblock_list:  caseblock_list.caseblock 
	switch_stmt:  LSWITCH $$88 if_header $$89 LBODY caseblock_list.'}' 

	LCASE  shift 511
	LDEFAULT  shift 512
	'}'  shift 627
	.  error

	case  goto 510
	caseblock  goto 508

state 583
	caseblock:  case $$61.stmt_list 
	stmt: .    (253)

	error  shift 310
	LLITERAL  shift 69
	LBREAK  shift 41
	LCASE  reduce 253 (src line 1730)
	LCHAN  shift 79
	LCONST  shift 47
	LCONTINUE  shift 42
	LDEFAULT  reduce 253 (src line 1730)
	LDEFER  shift 44
	LFALL  shift 40
	LFOR  shift 50
	LFUNC  shift 125
	LGO  shift 43
	LGOTO  shift 45
	LIF  shift 53
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LRETURN  shift 46
	LSELECT  shift 52
	LSTRUCT  shift 83
	LSWITCH  shift 51
	LTYPE  shift 32
	LVAR  shift 30
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	';'  reduce 253 (src line 1730)
	'{'  shift 311
	'}'  reduce 253 (src line 1730)
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 57
	stmt  goto 306
	compound_stmt  goto 307
	expr  goto 48
	ternaryexpr  goto 55
	fnliteral  goto 74
	for_stmt  goto 35
	if_stmt  goto 38
	non_dcl_stmt  goto 309
	labelname  goto 39
	name  goto 70
	new_name  goto 54
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	select_stmt  goto 37
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 56
	expr_list  goto 49
	stmt_list  goto 628
	common_dcl  goto 308
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 77

state 584
	case:  LCASE expr_or_type_list.':' 
	case:  LCASE expr_or_type_list.'=' expr ':' 
	case:  LCASE expr_or_type_list.LCOLAS expr ':' 
	expr_or_type_list:  expr_or_type_list.',' expr_or_type 

	LCOLAS  shift 631
	'='  shift 630
	':'  shift 629
	','  shift 632
	.  error


state 585
	case:  LDEFAULT ':'.    (58)

	.  reduce 58 (src line 527)


state 586
	if_stmt:  LIF $$78 if_header $$79 loop_body $$80.elseif_list else 
	elseif_list: .    (84)

	.  reduce 84 (src line 737)

	elseif_list  goto 633

state 587
	pseudocall:  pexpr '(' expr_or_type_list LDDD ocomma ')'.    (127)

	.  reduce 127 (src line 945)


state 588
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr ']'.    (134)

	.  reduce 134 (src line 981)


state 589
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr ':'.oexpr ']' 
	oexpr: .    (292)

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 292 (src line 1910)

	sym  goto 124
	expr  goto 190
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	oexpr  goto 634
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 590
	keyval_list:  keyval_list ',' keyval.    (284)

	.  reduce 284 (src line 1883)


state 591
	keyval_list:  keyval_list ',' bare_complitexpr.    (285)

	.  reduce 285 (src line 1887)


state 592
	keyval:  expr ':' complitexpr.    (143)

	.  reduce 143 (src line 1031)


state 593
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 
	complitexpr:  expr.    (146)

	LTHEN  shift 154
	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	.  reduce 146 (src line 1057)


state 594
	complitexpr:  '{'.start_complit braced_keyval_list '}' 
	start_complit: .    (142)

	.  reduce 142 (src line 1024)

	start_complit  goto 635

state 595
	bare_complitexpr:  '{' start_complit braced_keyval_list.'}' 

	'}'  shift 636
	.  error


state 596
	pexpr_no_paren:  '(' expr_or_type ')' '{' start_complit braced_keyval_list.'}' 

	'}'  shift 637
	.  error


state 597
	ntype:  '(' ntype ')'.    (173)
	non_recvchantype:  '(' ntype ')'.    (182)

	LBODY  reduce 182 (src line 1226)
	'('  reduce 182 (src line 1226)
	'{'  reduce 182 (src line 1226)
	.  reduce 173 (src line 1207)


state 598
	compound_stmt:  '{' $$59 stmt_list '}'.    (60)

	.  reduce 60 (src line 552)


state 599
	structdcl:  '(' embed ')' oliteral.    (234)

	.  reduce 234 (src line 1605)


state 600
	structdcl:  '(' '*' embed ')'.oliteral 
	oliteral: .    (304)

	LLITERAL  shift 432
	.  reduce 304 (src line 1946)

	oliteral  goto 638

state 601
	structdcl:  '*' '(' embed ')'.oliteral 
	oliteral: .    (304)

	LLITERAL  shift 432
	.  reduce 304 (src line 1946)

	oliteral  goto 639

state 602
	indcl:  '(' oarg_type_list_ocomma ')'.fnres 
	fnres: .    (214)

	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 492
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 214 (src line 1480)

	sym  goto 124
	dotname  goto 497
	name  goto 199
	fnres  goto 640
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 496
	recvchantype  goto 493
	othertype  goto 495
	fnret_type  goto 491
	fntype  goto 494
	hidden_importsym  goto 11

state 603
	hidden_type_misc:  '[' LLITERAL ']' hidden_type.    (322)

	.  reduce 322 (src line 2043)


state 604
	hidden_type_misc:  LMAP '[' hidden_type ']'.hidden_type 

	LCHAN  shift 350
	LFUNC  shift 352
	LINTERFACE  shift 348
	LMAP  shift 346
	LNAME  shift 344
	LSTRUCT  shift 347
	LCOMM  shift 351
	'*'  shift 349
	'['  shift 345
	'@'  shift 13
	.  error

	hidden_importsym  goto 343
	hidden_type  goto 641
	hidden_type_misc  goto 340
	hidden_type_func  goto 342
	hidden_type_recv_chan  goto 341

state 605
	hidden_type_misc:  LSTRUCT '{' ohidden_structdcl_list '}'.    (324)

	.  reduce 324 (src line 2051)


state 606
	hidden_structdcl_list:  hidden_structdcl_list ';'.hidden_structdcl 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 551
	hidden_importsym  goto 11
	hidden_structdcl  goto 642

state 607
	hidden_structdcl:  sym hidden_type.oliteral 
	oliteral: .    (304)

	LLITERAL  shift 432
	.  reduce 304 (src line 1946)

	oliteral  goto 643

state 608
	hidden_type_misc:  LINTERFACE '{' ohidden_interfacedcl_list '}'.    (325)

	.  reduce 325 (src line 2055)


state 609
	hidden_interfacedcl_list:  hidden_interfacedcl_list ';'.hidden_interfacedcl 

	LCHAN  shift 350
	LFUNC  shift 352
	LINTERFACE  shift 348
	LMAP  shift 346
	LNAME  shift 557
	LSTRUCT  shift 347
	LCOMM  shift 351
	'*'  shift 349
	'['  shift 345
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 555
	hidden_importsym  goto 558
	hidden_interfacedcl  goto 644
	hidden_type  goto 556
	hidden_type_misc  goto 340
	hidden_type_func  goto 342
	hidden_type_recv_chan  goto 341

state 610
	hidden_interfacedcl:  sym '('.ohidden_funarg_list ')' ohidden_funres 
	ohidden_funarg_list: .    (298)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 298 (src line 1928)

	sym  goto 360
	hidden_importsym  goto 11
	hidden_funarg  goto 359
	hidden_funarg_list  goto 471
	ohidden_funarg_list  goto 645

state 611
	hidden_type_misc:  LCHAN '(' hidden_type_recv_chan ')'.    (328)

	.  reduce 328 (src line 2069)


state 612
	hidden_type_func:  LFUNC '(' ohidden_funarg_list ')'.ohidden_funres 
	ohidden_funres: .    (337)

	LCHAN  shift 350
	LFUNC  shift 352
	LINTERFACE  shift 348
	LMAP  shift 346
	LNAME  shift 344
	LSTRUCT  shift 347
	LCOMM  shift 351
	'*'  shift 349
	'('  shift 617
	'['  shift 345
	'@'  shift 13
	.  reduce 337 (src line 2155)

	hidden_importsym  goto 343
	hidden_funres  goto 616
	ohidden_funres  goto 646
	hidden_type  goto 618
	hidden_type_misc  goto 340
	hidden_type_func  goto 342
	hidden_type_recv_chan  goto 341

state 613
	hidden_constant:  '(' hidden_literal '+'.hidden_literal ')' 

	LLITERAL  shift 464
	LNAME  shift 10
	'-'  shift 465
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 466
	hidden_importsym  goto 11
	hidden_literal  goto 647

state 614
	hidden_import:  LCONST hidden_pkg_importsym hidden_type '=' hidden_constant ';'.    (309)

	.  reduce 309 (src line 1968)


state 615
	hidden_fndcl:  hidden_pkg_importsym '(' ohidden_funarg_list ')' ohidden_funres.    (209)

	.  reduce 209 (src line 1416)


state 616
	ohidden_funres:  hidden_funres.    (338)

	.  reduce 338 (src line 2159)


state 617
	hidden_funres:  '('.ohidden_funarg_list ')' 
	ohidden_funarg_list: .    (298)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 298 (src line 1928)

	sym  goto 360
	hidden_importsym  goto 11
	hidden_funarg  goto 359
	hidden_funarg_list  goto 471
	ohidden_funarg_list  goto 648

state 618
	hidden_funres:  hidden_type.    (340)

	.  reduce 340 (src line 2166)


state 619
	hidden_fndcl:  '(' hidden_funarg_list ')' sym '('.ohidden_funarg_list ')' ohidden_funres 
	ohidden_funarg_list: .    (298)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 298 (src line 1928)

	sym  goto 360
	hidden_importsym  goto 11
	hidden_funarg  goto 359
	hidden_funarg_list  goto 471
	ohidden_funarg_list  goto 649

state 620
	hidden_funarg:  sym LDDD hidden_type oliteral.    (333)

	.  reduce 333 (src line 2105)


state 621
	common_dcl:  lconst '(' constdcl ';' constdcl_list osemi ')'.    (33)

	.  reduce 33 (src line 333)


state 622
	constdcl_list:  constdcl_list ';' constdcl1.    (225)

	.  reduce 225 (src line 1543)


state 623
	fndcl:  '(' oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma.')' fnres 

	')'  shift 650
	.  error


state 624
	fnres:  '(' oarg_type_list_ocomma ')'.    (216)

	.  reduce 216 (src line 1489)


state 625
	loop_body:  LBODY $$65 stmt_list '}'.    (66)

	.  reduce 66 (src line 607)


state 626
	for_header:  osimple_stmt ';' osimple_stmt ';' osimple_stmt.    (70)

	.  reduce 70 (src line 633)


state 627
	switch_stmt:  LSWITCH $$88 if_header $$89 LBODY caseblock_list '}'.    (90)

	.  reduce 90 (src line 771)


state 628
	caseblock:  case $$61 stmt_list.    (62)
	stmt_list:  stmt_list.';' stmt 

	';'  shift 420
	.  reduce 62 (src line 574)


state 629
	case:  LCASE expr_or_type_list ':'.    (55)

	.  reduce 55 (src line 476)


state 630
	case:  LCASE expr_or_type_list '='.expr ':' 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 651
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 631
	case:  LCASE expr_or_type_list LCOLAS.expr ':' 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 652
	ternaryexpr  goto 55
	fnliteral  goto 74
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 632
	expr_or_type_list:  expr_or_type_list ','.expr_or_type 

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 181
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 180
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 124
	expr  goto 175
	ternaryexpr  goto 55
	expr_or_type  goto 516
	fnliteral  goto 74
	name  goto 70
	non_expr_type  goto 176
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	recvchantype  goto 177
	othertype  goto 179
	fntype  goto 178
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 633
	if_stmt:  LIF $$78 if_header $$79 loop_body $$80 elseif_list.else 
	elseif_list:  elseif_list.elseif 
	else: .    (86)

	LELSE  shift 655
	.  reduce 86 (src line 746)

	elseif  goto 654
	else  goto 653

state 634
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr ':' oexpr.']' 

	']'  shift 656
	.  error


state 635
	complitexpr:  '{' start_complit.braced_keyval_list '}' 
	braced_keyval_list: .    (286)

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'{'  shift 407
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 286 (src line 1892)

	sym  goto 124
	expr  goto 406
	ternaryexpr  goto 55
	bare_complitexpr  goto 405
	fnliteral  goto 74
	keyval  goto 404
	name  goto 70
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	uexpr  goto 56
	keyval_list  goto 403
	braced_keyval_list  goto 657
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 636
	bare_complitexpr:  '{' start_complit braced_keyval_list '}'.    (145)

	.  reduce 145 (src line 1051)


state 637
	pexpr_no_paren:  '(' expr_or_type ')' '{' start_complit braced_keyval_list '}'.    (140)

	.  reduce 140 (src line 1015)


state 638
	structdcl:  '(' '*' embed ')' oliteral.    (236)

	.  reduce 236 (src line 1617)


state 639
	structdcl:  '*' '(' embed ')' oliteral.    (237)

	.  reduce 237 (src line 1624)


state 640
	indcl:  '(' oarg_type_list_ocomma ')' fnres.    (244)

	.  reduce 244 (src line 1679)


state 641
	hidden_type_misc:  LMAP '[' hidden_type ']' hidden_type.    (323)

	.  reduce 323 (src line 2047)


state 642
	hidden_structdcl_list:  hidden_structdcl_list ';' hidden_structdcl.    (351)

	.  reduce 351 (src line 2238)


state 643
	hidden_structdcl:  sym hidden_type oliteral.    (334)

	.  reduce 334 (src line 2121)


state 644
	hidden_interfacedcl_list:  hidden_interfacedcl_list ';' hidden_interfacedcl.    (353)

	.  reduce 353 (src line 2248)


state 645
	hidden_interfacedcl:  sym '(' ohidden_funarg_list.')' ohidden_funres 

	')'  shift 658
	.  error


state 646
	hidden_type_func:  LFUNC '(' ohidden_funarg_list ')' ohidden_funres.    (331)

	.  reduce 331 (src line 2090)


state 647
	hidden_constant:  '(' hidden_literal '+' hidden_literal.')' 

	')'  shift 659
	.  error


state 648
	hidden_funres:  '(' ohidden_funarg_list.')' 

	')'  shift 660
	.  error


state 649
	hidden_fndcl:  '(' hidden_funarg_list ')' sym '(' ohidden_funarg_list.')' ohidden_funres 

	')'  shift 661
	.  error


state 650
	fndcl:  '(' oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma ')'.fnres 
	fnres: .    (214)

	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 234
	'*'  shift 198
	'('  shift 492
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 214 (src line 1480)

	sym  goto 124
	dotname  goto 497
	name  goto 199
	fnres  goto 662
	interfacetype  goto 82
	structtype  goto 81
	ptrtype  goto 496
	recvchantype  goto 493
	othertype  goto 495
	fnret_type  goto 491
	fntype  goto 494
	hidden_importsym  goto 11

state 651
	case:  LCASE expr_or_type_list '=' expr.':' 
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	LTHEN  shift 154
	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	':'  shift 663
	.  error


state 652
	case:  LCASE expr_or_type_list LCOLAS expr.':' 
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	ternaryexpr:  expr.LTHEN expr LELSE expr 

	LTHEN  shift 154
	LANDAND  shift 135
	LANDNOT  shift 150
	LCOMM  shift 153
	LEQ  shift 136
	LGE  shift 140
	LGT  shift 141
	LLE  shift 139
	LLSH  shift 151
	LLT  shift 138
	LNE  shift 137
	LOROR  shift 134
	LRSH  shift 152
	'+'  shift 142
	'-'  shift 143
	'|'  shift 144
	'^'  shift 145
	'*'  shift 146
	'/'  shift 147
	'%'  shift 148
	'&'  shift 149
	':'  shift 664
	.  error


state 653
	if_stmt:  LIF $$78 if_header $$79 loop_body $$80 elseif_list else.    (81)

	.  reduce 81 (src line 706)


state 654
	elseif_list:  elseif_list elseif.    (85)

	.  reduce 85 (src line 741)


state 655
	elseif:  LELSE.LIF $$82 if_header loop_body 
	else:  LELSE.compound_stmt 

	LIF  shift 665
	'{'  shift 311
	.  error

	compound_stmt  goto 666

state 656
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr ':' oexpr ']'.    (135)

	.  reduce 135 (src line 985)


state 657
	complitexpr:  '{' start_complit braced_keyval_list.'}' 

	'}'  shift 667
	.  error


state 658
	hidden_interfacedcl:  sym '(' ohidden_funarg_list ')'.ohidden_funres 
	ohidden_funres: .    (337)

	LCHAN  shift 350
	LFUNC  shift 352
	LINTERFACE  shift 348
	LMAP  shift 346
	LNAME  shift 344
	LSTRUCT  shift 347
	LCOMM  shift 351
	'*'  shift 349
	'('  shift 617
	'['  shift 345
	'@'  shift 13
	.  reduce 337 (src line 2155)

	hidden_importsym  goto 343
	hidden_funres  goto 616
	ohidden_funres  goto 668
	hidden_type  goto 618
	hidden_type_misc  goto 340
	hidden_type_func  goto 342
	hidden_type_recv_chan  goto 341

state 659
	hidden_constant:  '(' hidden_literal '+' hidden_literal ')'.    (345)

	.  reduce 345 (src line 2208)


state 660
	hidden_funres:  '(' ohidden_funarg_list ')'.    (339)

	.  reduce 339 (src line 2161)


state 661
	hidden_fndcl:  '(' hidden_funarg_list ')' sym '(' ohidden_funarg_list ')'.ohidden_funres 
	ohidden_funres: .    (337)

	LCHAN  shift 350
	LFUNC  shift 352
	LINTERFACE  shift 348
	LMAP  shift 346
	LNAME  shift 344
	LSTRUCT  shift 347
	LCOMM  shift 351
	'*'  shift 349
	'('  shift 617
	'['  shift 345
	'@'  shift 13
	.  reduce 337 (src line 2155)

	hidden_importsym  goto 343
	hidden_funres  goto 616
	ohidden_funres  goto 669
	hidden_type  goto 618
	hidden_type_misc  goto 340
	hidden_type_func  goto 342
	hidden_type_recv_chan  goto 341

state 662
	fndcl:  '(' oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma ')' fnres.    (208)

	.  reduce 208 (src line 1379)


state 663
	case:  LCASE expr_or_type_list '=' expr ':'.    (56)

	.  reduce 56 (src line 500)


state 664
	case:  LCASE expr_or_type_list LCOLAS expr ':'.    (57)

	.  reduce 57 (src line 518)


state 665
	elseif:  LELSE LIF.$$82 if_header loop_body 
	$$82: .    (82)

	.  reduce 82 (src line 723)

	$$82  goto 670

state 666
	else:  LELSE compound_stmt.    (87)

	.  reduce 87 (src line 750)


state 667
	complitexpr:  '{' start_complit braced_keyval_list '}'.    (147)

	.  reduce 147 (src line 1059)


state 668
	hidden_interfacedcl:  sym '(' ohidden_funarg_list ')' ohidden_funres.    (335)

	.  reduce 335 (src line 2145)


state 669
	hidden_fndcl:  '(' hidden_funarg_list ')' sym '(' ohidden_funarg_list ')' ohidden_funres.    (210)

	.  reduce 210 (src line 1442)


state 670
	elseif:  LELSE LIF $$82.if_header loop_body 
	osimple_stmt: .    (296)

	LLITERAL  shift 69
	LCHAN  shift 79
	LFUNC  shift 125
	LINTERFACE  shift 84
	LMAP  shift 80
	LNAME  shift 10
	LSTRUCT  shift 83
	LCOMM  shift 66
	'+'  shift 61
	'-'  shift 62
	'^'  shift 65
	'*'  shift 59
	'&'  shift 60
	'('  shift 68
	'!'  shift 63
	'~'  shift 64
	'['  shift 78
	'?'  shift 12
	'@'  shift 13
	.  reduce 296 (src line 1922)

	sym  goto 124
	expr  goto 48
	ternaryexpr  goto 55
	fnliteral  goto 74
	if_header  goto 671
	name  goto 70
	osimple_stmt  goto 289
	pexpr  goto 58
	pexpr_no_paren  goto 67
	pseudocall  goto 71
	simple_stmt  goto 285
	uexpr  goto 56
	expr_list  goto 49
	convtype  goto 72
	comptype  goto 73
	interfacetype  goto 82
	structtype  goto 81
	othertype  goto 76
	fntype  goto 75
	hidden_importsym  goto 11
	fnlitdcl  goto 77

state 671
	elseif:  LELSE LIF $$82 if_header.loop_body 

	LBODY  shift 386
	.  error

	loop_body  goto 672

state 672
	elseif:  LELSE LIF $$82 if_header loop_body.    (83)

	.  reduce 83 (src line 728)


77 terminals, 143 nonterminals
354 grammar rules, 673/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
192 working sets used
memory: parser 3855/30000
451 extra closures
3188 shift entries, 64 exceptions
606 goto entries
1750 entries saved by goto default
Optimizer space used: output 2188/30000
2188 table entries, 576 zero
maximum spread: 77, maximum offset: 671
